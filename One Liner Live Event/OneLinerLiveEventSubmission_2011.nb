(* Content-type: application/vnd.wolfram.player *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       153,          7]
NotebookDataLength[    320714,       6479]
NotebookOptionsPosition[    309757,       6122]
NotebookOutlinePosition[    310197,       6140]
CellTagsIndexPosition[    310154,       6137]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Submissions to the 2011 \n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " One-Liner Competition"
}], "Title",
 CellChangeTimes->{{3.530363928804179*^9, 3.530363940081711*^9}, 
   3.5303640807594147`*^9}],

Cell["\<\
Variable names used in some submissions may clash. If an entry doesn\
\[CloseCurlyQuote]t appear to work, try restarting the kernel to clear all \
variable definitions and evaluating again.\
\>", "Subsubtitle",
 CellChangeTimes->{{3.5303640102205667`*^9, 3.530364120701037*^9}, {
   3.531750373466123*^9, 3.531750374006308*^9}, 3.531755195631686*^9}],

Cell[CellGroupData[{

Cell["1 Random cluster generator", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032431235259*^9, 3.528032433513755*^9}, {
   3.528066898203274*^9, 3.528066900938423*^9}, 3.5290855303840437`*^9}],

Cell[CellGroupData[{

Cell["Jeremy Vates", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}}],

Cell["\<\
The program is a random cluster generator, each execution produces a \
different result. Enjoy\
\>", "Text",
 CellChangeTimes->{3.527945110461541*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", ":=", " ", 
   RowBox[{"RandomInteger", "[", "99", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "n", ",", "n"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "n", ",", "n"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "n", ",", "n"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "n", ",", "n"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", " ", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
    RowBox[{"i", "<", "n"}], ",", " ", 
    RowBox[{"i", "++"}], ",", " ", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"Q", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"P", "\[Rule]", "R"}], ",", 
        RowBox[{"R", "\[Rule]", "S"}], ",", 
        RowBox[{"S", "\[Rule]", "P"}], ",", 
        RowBox[{"S", "\[Rule]", "T"}], ",", 
        RowBox[{"T", "\[Rule]", "P"}]}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphPlot3D", "[", "Q", "]"}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2 Stock market volatility", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032383059286*^9}, {
   3.528065957084044*^9, 3.528065959236863*^9}, {3.5280666560918016`*^9, 
   3.528066678524832*^9}, 3.5290855336697893`*^9}],

Cell[CellGroupData[{

Cell["Bob Rimmer", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, {
  3.52803237384715*^9, 3.528032399071885*^9}}],

Cell["\<\
While it may seem obvious, it works in CDF Player when Script.m has been \
created with the function Encode.  Script.m may be an encoded Mathematica \
package or a simple script created by saving a Mathematica notebook \
containing initialization cells as a .m file.  It offers a way to use \
protected content with CDF Player.\
\>", "Text",
 CellChangeTimes->{3.528065749170496*^9}],

Cell["\<\
(Clarification from the submitter after I objected to some of his code being \
in packages:)\
\>", "Text",
 CellChangeTimes->{{3.528065769808661*^9, 3.5280658068564253`*^9}}],

Cell["\<\
The point of it was not to load the package but to let people know it could \
be done.  Perhaps the line is bug in Mathematica, but it is a useful one in \
that it allows people to create SECURE CDFs, something which is not \
advertised. \
\>", "Text",
 CellChangeTimes->{3.528065766107918*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Script.m\>\""}], 
     "}"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5280657313278017`*^9, 3.5280657313302107`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"The following output shows recent stock market volatility \
as measured by the daily Log[High/Low] of the SP500 index.\"\>"], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065837163868*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
yf7In2n+O+b3Hvgde8d8vAa/hHfUH1id+z31dFst9Jvznv7zFdh+5D3jLyew
6vF76lVHYG2OD/Szh8CGyh/oj1ICax5+YP0vKLBekcbrv4JvhTTydxXt1g5p
1P8k9LqXRr0vQq9faRw/Fvkub+d48I+9rZ3+eYv1NdXO9eIsxjdn2hkP5rOV
TWd/hcDKNunUKx/4T0qnn5B//c50xmOBnmUyuH7o15YZbMf60Y3PoJ5YL0aT
bEc8lusZjBfxaJt9ZHzwi2HMR/b/gPxv+cj1Br62Kx9Zz3zAP+MjxysBPTd+
+kd/xeVP9E81gdVpn6i/l8C6Yp+pJ8azr/tMvyLfqsjP9Gt25P/dZ85XCfl3
/8J6VxZ6a77Qb+CjufiF9ek79Ez+Qv5p8IPLV3l/gn+DvvJ6G/Qe/JX8c4nx
jG++8nol/Kv8xv6Nwb/uN+anB/gP+MZ8DwD/5d+o53Do6fSd7f2hZ53vHK8R
+Pf9Tr3Qrl/ynXw6CWwK/8711B361sxkPtGu653J8WqA/8JM6oX+lhOZ5NMW
/J9mUv9A6NvjB9dbKPSd94P5GgT+Ztk+Hfzjf8jnU/DP9ZPjB8Mfs39y/Abw
x5GfXG/Fwf+RbFeBf/ZfxMiv6uAv6oX6oX3wi36Dnobfv8hvAvj6ZXF9TQPf
9lnsD6y/m0W99NDzZxb9Bf2s5X7Tf8ifou1v+mU8+E75zesnQ8/vv7nekS+7
tyIZ888B/9YOjOd58J/owEKfmeC/w4GFX09Bz9LZkjH/cejZwoFF/sLAf5wD
i/vnQfDf5sDCH8iP9ZoD/7VedE2zc7668MNoBxZ6qsF/swOLfDxGfYtxYJHf
U6hv6Q6M94eoDyNzsD/ul7YNOTge7ifKaNl+APezDw4s1s9LrEePnIwP9UV9
KSf1wf1Nl+rAoh4+Qj1zy0U93cG3vgOLfMAv2ggHFv67jHqWlIv6oP6Zi+RO
Rn00gW89BxZ+2Qu+gxxY3M9WoD68dmCRz46oD4XyEJdCfaibh/PVQT3un4fx
YHzdMtm+DHoWzMv4ddCzdl7GC6zt48BiPRvBf3Fe8h8P/ifzMn+joWeNfMzP
IujZKx+v7wH+C/Kx/0TwP56P80F/xVPZn/p2z8/4kA/70fyMB/cj1ZP8zG8S
+OYskIz6Ar1tswowX3heUR4uQH0TwTeuAOOBH/TZCtJPQ8C3YkHy0ULPAwXp
32bQ874Di/WGz9PGrIKMH36x+DpR3znQu50T9e8DPe84MZ4T0POH7I/nF5uP
M/2B50ul1pl8zoP/ZGf6IxN6fnPmeBnQ07sQ1x/0UrcqxPbP4D/BgcX9IRvW
3/ZCjOcX9FUp2Y77k7a5kvo+Bf+xSvK5Av5blYz/OfhfVVKv69A3tDDXC57/
TKMKM39YP9ZNhZmfINS3mMLJf9/P1PbCjLcr1tuIIuTXBP5YX4TruwXqW1QR
zl8d6/F9EfLToL4VdaE/6qG+rXVh/jujvlkk7oP6luJCv6L+mlxdOV9v8A92
Zb2cCj3futLvc8G3sBvbeX8LdCN/Pl8MdGO+wN/8yo1+aY37hbM7x0P9Vga4
c/714NvPnXxXgO9Sd+Z7K/QsWJT67oKetYqyfq9FPdbJdtRz46KiHA/jW8Ik
Xgw9q3tQjzPQs6cH11Mi+M/3oL4vwP+YB/2dCv4Jsv9z6NmtGOO5CT3nFKMf
H4H/0WL0m8cawf9xMdbbsgLrchTnfO4C22cWZ/zFBVYdKk59fQTWPizO8YoK
bFB40o8tBDZX8GR8nQTW7Pekf/oLrL/nST9qBTb9krizwNbyJej37gIr2pVg
vH0FNlpLMP9zBLZklqA+c8G/bEnGtx7825QkvzDwn1SS8aK/7WtJ5m++wMoy
pVg/gTUtS5F/b/AfX4rX9wR/Uynybwt9vbyY7+XQt5kX+28C/zFe5LcH/Ld4
kd9C8L/ixfq1Cvo2UVH/7dBXr+L10eC/UcX83wX/yyqul+fgn6Zivl5B3+Gl
uR5eQN/1pRlfKvhHlibfb+DrXobXv4Sea8owP+ug58Uy5HMAfJPLyHoHvi7e
zA/mswV583rw1Z/3pl9yrhV6vvEmf0+Brcqy1MNFYEVgWa7vX+A7oCz55hHt
lpey3VVgu5MP43MWWFXHh/OjXdvXh/WuscCGJT4cr6XAygLlGE+AwJqa5Zjv
JgLre5djvoPBf6Fs9wP/E+UYTwGBjT3KMx5v8J1XnvO1AF9zec7XAHzjy/8z
nvKIL9dDGfB55Mvr0a7P7sf4ckOvmX5sh37qg36sD0qBdQ/8OB70Nv72o5/q
g59fBfLpBn3uViD/3gKbf1Zg/tBuK1eRuBn4tq1Iv6HddLsi/RQIfb5XpP5t
wLdsJfrFAL6tK3E+8NFNrMT1Wgd6fanE+apBr9KVyb898tuiMsefCP7jKnN9
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.35*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"2004\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"2012\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3281904000, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.281904*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox["\"SP 500 Daily Close\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065837584446*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latest data: \"\>", 
   "\[InvisibleSpace]", "\<\"Tue 18 Oct 2011\"\>"}],
  SequenceForm["Latest data: ", "Tue 18 Oct 2011"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065837588468*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
B0uCsT87Ay4ejmzzu433D6W0oD84YfS96A/GJ/TBg6prNUPwviN7N1iD1mX3
qRXnm3FgpZa2gzav8X7iA3DK2q8Db1NxfNPThvknmzulLxDjEzvB1elzXQOe
4/5GLNjqvG3dUxa+f74AnEZN22svhv9/IG3gK4LJaZNzsb05L+ulkoMDPs/A
+9YqJ8EsqyOJF7zw/HAuuL1YV+Q9xusjmsHDi2/vDB8g4x97Kr2Xmpd8aeFi
F4xXRYO1aDMPO1C4v5wDNn5VHPbsAq4/GsFB13YIHsb4EkdoeS8160XcyMom
7N+0wFs/Js/OPIbrjffgVP+MNN9zGB/8Cw6L+ZJ8msJ4q4YOzE83a4m378H7
BDbgobcJXUdTcf77FpySdW70Ee6P0SbBTp47bSX1cX6zSBfaO9NlcloZvh9r
K3j7RRfR8yX4vrcjYMazv7fyzTEeMQ6WfX/adL0Ljm8LV0B+C3R5PluO/cNm
MKc2WUS7BeMph8EzHaYuooZw/zMDrPy+qfXFGN6nna8H4/Xz9Rcc72G8yhI8
Z1tOT94ZnJ8dAh+Pimvml2D/xgKLiNjNm0fD8zTPwaJX1mdPvMD1/YaV0B9M
jVUR/0LKXyAAfINnLxSJ8UD6FfCY+hWRVQexPj8Bz/I97W5ijfchBsG0dSlp
Fil4PzJtFczvk182yGrj+8VrwP1qsZ9qikl+sfvBV6i+rzZXcH4mrw/rQ8+0
tYwwvN95ASykWyBUXYDnI6rAfsOVP+QOY/l/A6vmy0iLu2B/Jrca5n8KUbxl
ON+mM8Bll2KPMGvwfslDcOs1TsbJvbhfwAUrDzvVy7jifu1MA/i9GffTNvfh
+96MwB0rMl+uc8b1kjt4cFl+J38A+4NusJqzBH8jhf0BzbCXcjy1Q81wD87P
DMDi746azZXDeIob+JiFgG9FO+Z3Arjtw7uHdXi+xlVyDdRHSzexN19Jf5+4
Cuzf01bvsZqsryt3gWPcRTdHt+B5n//AC0ps8nXXkfOeKkXgZhPLsG/BeN52
hVEvxX5zNTo1As+r7gCLeRTdS6GR81i00+D5n1LDXouT81yMfPDfIInB1sZ7
JP2t4BqrOcLvHmM83tkY5hsn8x0sRPD+bAxY7PDPugMOpHxc2WC34Wdf2zJw
vG4CZ6XeOf6mmaSvcopJL7Vlrs2RegNyfoJ5HPxLoOugkQTeR8sGL3k8TTNC
mMSL2B/BxXLT752Pwf1PQQb0x3WnL3aU43lBTTBt8pzXW1FyHo+VBV596tiM
imoSP+O8A996tOyjIQvjbX/BD3Z7Me/1Yfx1CdVLddXWu494kvx03QYOGW9g
S1Xjfd/f4HMFD9u8fmB61df2UvvezEqr3I3xICZ45QLZuB003O8IBStMy08K
XUPijYxf4M85e1vMk/C+r6op9E9ix85fzsT3i28C+4uYLFNdiucXg8GF26xe
3X2B6+cM8GaXUEPudnz/kIoZjIdPiuJic/G+kQXY5NHaevoiXH8GgjdmdgRL
bcbzSungvXMyDj65Ss7XMZ+B/7eu+Z/c3kH2Az5wd33lyLdmNv/dXsj6ryIg
X93Q78Ebe8h+kzlA/oNjnJo/xMHhXXAMyL/Zrfs6+CRkf8EHIL8+gD/Bpw+c
Xg3y3V45cm1y9zAPg4wXzwTytT8u/XivALx+csJhIH9tosUFllbIeOtbIN/p
hFaHiR1k/7K4+yvHE+4XWwSWQdZ3TAPye4p43U3+g+3bcADIf/LoxRTFOsj5
DK+A/AD+OxvTUiDnS4h6APtvR9rjla5CxrvtgfywpF3Hjn6BjPfsBfIbw9m2
7XoBWf/zAshn4bzTFDdloT0AOhHMYA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.35*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"2004\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"2012\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3281904000, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.281904*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox["\"SP 500 Log[hi/lo]\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.5280658377702723`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Recent values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.029388310913822546`", ",", "0.031041442135926054`", ",", 
     "0.02495688759138703`", ",", "0.03581402547192532`", ",", 
     "0.04578301143462434`", ",", "0.02687461396098605`", ",", 
     "0.026604481516820273`", ",", "0.018211610895668945`", ",", 
     "0.031246964298917976`", ",", "0.010006201130737087`", ",", 
     "0.019914249997796063`", ",", "0.014078396358828417`", ",", 
     "0.015603585364531696`", ",", "0.021395604476843303`", ",", 
     "0.03433509204298171`"}], "}"}]}],
  SequenceForm[
  "Recent values: ", {0.029388310913822546`, 0.031041442135926054`, 
   0.02495688759138703, 0.03581402547192532, 0.04578301143462434, 
   0.02687461396098605, 0.026604481516820273`, 0.018211610895668945`, 
   0.031246964298917976`, 0.010006201130737087`, 0.019914249997796063`, 
   0.014078396358828417`, 0.015603585364531696`, 0.021395604476843303`, 
   0.03433509204298171}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065837775104*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF3XlcTN8bB/BrS0kMQqovgygRY6sojIRsGZSlkrFnH7Ik4SJKwiBE0aCS
LVOiEAahQkaSSjIISTGWEkW/+3nOHz//fF/v151mzj33Oc9Z7rn323nOisnz
G3Icd9GA4/Bf4Z98l7psOOcm79rHOPSWYOVlcqKk5N4yWPMaNlwVvPjc0mGC
9UZJgkU24py103CcD4X1Yv2Vv0twXJ0M+3V6tKLlehzXFcNuO4vCRylwXNQ0
WXD4tz/umi04Lu0L6+IGzdgegONcEcwfNWmQtg2WNL4kOD9p96SQbfi8vDds
sO/GFo6n8k6Hmxe8N/EJhMUvYG7u0nk/lsKyBimC5zW4v9SXfp/vCQfv/eD8
0J/K6wnz/lnJWYNh3WZYqQ1aP3oB/l7xDx46weWHdAuOq2wuC47sm5ovDoK1
k2HZic6j/y2i8m+EawpXdlTT30tOw6u9Pes37sBxTbcr+L0ofXrhJBzXT4Sl
RyKWxQzDcXEg3Hu5/ehTVD+yWDi09eBb9iup/DmwYt6D3670+6IJqYI1B3r2
zBsFS9fBso6VmrrFsOIEzE0PjHtmTeV/CHdZ6H1xLNWftor+PniOezn9vfJ4
muCbpnc/Vuym658JW453nvhxLV3/77DUTbzQnKfy/ndVcOa0ESU1W6k+o+Di
Z47rvOl66O7BZdY9uluuo/LqYWlp5IWSvnT9za+hfN/vTug4kMrrCgctHv7k
GF1/7i5ccGJXqdd8iodKOOO8nkvxp3hof11w4KqF438FUzwMh9ULMxLlvlTf
S2DnL8d0dpupPsths7yAyb/pfHjTdPz+cb771004rh4K58zYu/g41Y/ODxa1
P2cdNJPKfwDWDGusejEUx1WtbgiO8ByX6rKa6tMJztmbbfOXysMtgHVzivdW
UP1KlLDG0ryR0US6/o430T5cMst/z6X6nAtntJ4d5sTKuxve8dxwe6NwKm8q
rBp1ZIVmFJX3DZy+rpcymepbKr+F9trl17VJC6g+w+CEJaM52Sq6/imw25xf
TZVzKH5L4MxvXt5zWPsz0gjuGO6+rQfFnzIE5pRJlrffDEV9JsH6LaK18Swe
XsK5r/8aOlH+EBvcRnzFPHQ4ROcvk8C+S8cNct1H9ZkIG86c/9LEj+qzEA5I
8znlRL8vbXRHsLhqaPGUXdT+7ODahwdmNIqg8k+D9ZnlkpsbqH3lw6LIHX/O
UPuUc3cFr3K9XG23lcpvC2dYrKzuRu1f4wGXFB7MUoRQ/W+CN2W3zB8ZSvX7
F1YF2Ta4Q/Wlts5AeSavqq0YR+WfBGcYBu+cvZPKHwTrG1W0aT2f6j8elk5T
FJZS+9Za3UP+GZ0SaRFI9TuR/KfXv2Y7qPzr4TzP7O1dqX3LT8HxDgeK41k8
P4YVOV9Vj1dR/Y6/L/hOw/TDu4PxedlaWPPo8vf5lA94FTz0sv++xXRcnQ1n
fHQsMaB8p/sJa2f/nvlgOtWv/wPki/JJGUErqH6PwdzNnBQTyhfaB7DU3kvz
YQnF83e49FJwX0s6H4llpmC5xe6eVydSPGTA3KWMYT8CqLxf4eqzc6qmUX6Q
dcjC728+dLSPD5V3BDnUNHRQED4vupNF+WFDgwUeFA8VMGfL3Z/Zk8rbLhvX
o+lI1Y3Z1P6ksM/5jZ391lB5F8N+2W3dXOZSfvgEJzy533srxbuyzUPkh27W
4SaUTzRDYP324pfd6Lh+ISxeGdXm4jJqj/vhPIOwI0NXU32KHuH416/dbEdT
PAyGa66dn50tp/LPh/nxHaU2dlT+vbBsSNoxd7reiquwY5eILzOpfXOOj/F9
dfGrB7pRPMyBrTTNqlRUX/JwWNbSxi2A+lvlFdin7ulsyUbKzzpYN8kpzJvO
h9+Zg78PXrWxIcvHl+CKiXkia2rPulew5vCcry3nUfwaPsH3ffG+8iCErv8O
WNzx+vCw9VSfalizN2vGIaof7iWs+3xp9LfxdP2baNH+TCeXrKPfl/eB1aXJ
9lWTqT4vwJpPPvIraykeCuDp9cdyAjdQPDR8ivq/dPDLSopPvhfsOnereXdq
3+qpcN6ljdXmlG+kz2HNgrKwr8upPuth3bkVt3wpnlQ9clG/c7eJ1dR+tVPg
SMcx9W/p77lNsNvPU93CqP6VdbC4KOxYc4pfTfdngnud7H77N7UnvQxW+XX9
6OhG8bABllsvF8mov5DFweFnfvf1o+/Tdc1Df216Ym4D6v9F7nBxRdy7UDpf
aQCs/DX+c/VMKv9JWF6V+DmXfk/1CJa98tirovYjGfcc5W9tYN11IdXvGtgv
wuykCxuvxcC6zi3n2FH5NFnke6cPzJVRfvsBa8b8LAhzofpdlY/rM/Dkfktv
io9oWPJEuieH2rfuPhx9UCLlqP5F3+CCjl5eOXT9pRYv0H/W1l4/SeXTHoHr
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
bo6cOYvG96JJsGK72P8ijb9VT+Cg2tSy81Qf2t9w5M/wl9UUP5xVL8GHZiTN
mkrXQ+IOa++3tbNn498AWBK0Yv9jtl5TDeuKfo2pZde3sx36r9SW/x2gfCwb
B6d0sFhSTveX+DVw3VublyXUX6ljYHFV3ZN0in9px944n2LLkWq6n6pwg7n8
7vavaH6gWgXL75xr/2IqxWc0rA6Jcvak8nAP6O/L4maz8YpyZB+U71198h2K
H80KOGNpxlKO+mv9EbhignGphCzOgKUNU5L/UnuVfYHF1cEWETReFB2W4Ps9
7Na7Un1Kb8OyoceTDCj+FJ/peNqObEv6vKptX5Sfi8wdSuspkghYeqn93r0e
VJ83BfN216pWmJ2k8pbheEb4ji9XqD/WtO6H+Au+39WN8r3eGf632Ox8EF0P
/jrceor3GW9af1K/h684zHoUtJfae8v++L0bjzwdqf8TDYbnZbYc2Y7m49J5
sM7r8Ll+VL/at7DerWRZJet/TQYI3hUTvav1QSq/Azze6fVtGd3/kM+GuQPj
Bnai/l+5C9Y8vf98Cc3PxM0GIn897PRZQvslZAPgTO6utJjim/eFS8JH5k6j
+ac6FNY09TyQT/ldlwzrzGoLP0+i9tXXHo78PO0S3d9RecOOTx+X+tF8RLsd
zjkS3W42redwapg3jWsVQeWTFJH9g14OpXjRTHdAeXqvcxtG56vfCg/u363J
Z8qH4gswvzO0xpHykewFrBtgtO47u9/NO8L9DruMGUH1eRZOUNuO9aPvU+TB
NhYXChrS+F71D67x3hEzjd2PsxmEz9urh+6g9ic/DUfbWCSn0HhJ+RQO7btW
sof1V7Uwd8jtUQpdL323wSjfgE43U+h8xDK4/EbrrzqW/3Pg0FExm95T/6ir
gaW7bzRtTOuDoq5OiCdpR8MzNF+WToDF12vS4tj69DqYW2cZFtGJ6rMaLsle
nt+B6lcidsb3O7qEqNn9wrHwUnfjuqXU3pWr4YibTRZfYPn2OFxT2aDgMJ2P
7L8h+L3lR+J+U//Kj4YlTvYj/qPzUa+E/W7UW8yk/S+6KNjx7sTTmeFU/vuw
6u+flHga/6hchyLfffhqu5Dux2mXw1zXNrFy1n8dgU2/zfY9zPLbXZjfJZpr
5k7tsRIu85I8qKPy65cMQ/4raVU+gsbz4kOwxnxae9FI6n81sKync3w2lZcv
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
N5TyjY7rir/3VA1a6UXl7Qk33dVj+QZav5V60nGdiY0n5QvtM3hB3pEw9r5k
7h+sGnvFuy/Fk8TGCuef/Xz7FPZ+pMmwW7FRr60031EGwdNnHnP5wPYr1sJL
M7jlRZRvZN26IZ/KJ3q2Ys/jT4SXnxRV2dB6rXo9nDm37cfhNL/SnYJrFl0q
OUbXS9Glu+DzP0IOr6V8pxoP8y99vLpSf6ZdS7ao6JrP3p92Aj4Zs3dbM/Y8
2kNYH3v1YxFdD80Ya5zfspq5Yex9Mv6wTe3ZWi0r/3FYv3W88Vj2vuZMWP61
ahpH7ZH/Do9fad6Vva9FtNIGv+8T3z2G1j+lUTD3vVZxlNZDFPdgQ2/jNSXs
ebmvsEQcIK6g/KHt0ENwWerxJStovCePhEUzOw4sp/Ip78C6z53m/WH3xytg
7uKLU19sKJ7b2cK5zj+/0v5k8XA4zXhuw+bs/Wm34JrQ7/vUtH6n+wT/vJm8
zI/9/wlMe+L3F/QYtYnqXzoUjo5z37WH5ifcR1h045T/f5QvJa16Cc4umf/G
nb2v2wku+1bVcDt7PmY+LL51pVMbWi/V7IVtrjca+4zav6yFHeq3i+jJDcpP
vCOscH364xq7XzQHdnx8y8CO5ge6cHhA7d1PCbQeJ0qF1YpX15zYeGdgb7Tn
xZ+N9rP3X8+C0zXfOgWw9ZUw+OfLdf3Z+9QkKXD4if5nOLYeVAIvfa+4fYj6
f71PH/R3IeXcJmqP4hDykD+JNvS+LlkS7HcwbDN7XpB/Cbt5fVTl0vVVN5Eg
vvoVlEfT9ZIGw+dn2Tbaz9YvE2FedjShE71vT1UA66N8TY1oPK9t2Fdw0OOl
/2zo+nF2sOqm35JEdr/lObz65FFFBHsfZD1cJen1+wjtXxLb9kN5l7h2NaX5
j8wDtt8yxNuQ8rsuFxavT25iw/Zj/4Xli6+bebH9Edb98fstVPv60HhHMQnm
k+5ttaD+Q7UBNlhe0fM53d+X/IG553qHspFUn1YDBBfNNn5xltaHle7w7sV2
1Q0o32sCYN5X/iqVrQ+ehG1MZH3K6P4r33kg+o9+Oa2bsfw2Du5ul/DVneWH
NXBacUd1BHu+TwUbhgaa9af7tdJs+vte4+qt2fjMzR5/b1s68SrFK+cPi5Nm
/2PrS5JjcN3M0jOlFC/yB/DUn3+uH6f1UeU32Nlnd9l4Wl+WHXVA//nX79dH
6h/5DAfKLy0KF9D4QP0FloZ6y8ez/RxmjoiP6H4F0ez9oIfhnXL19SS2H/82
rAirG9yf7u9pP8M2z3vNX8j2H7QbhHhPb9vtKPv/P0hhQ6tP5mr2/pObcPmY
/Q9TWfyWwcVbLNOVbL9am8G4vnsHWv9l72MYAgelr12wh+qTXwirXvhMTafx
l+gDnLKu4JMdzX+kIif0N2v6dytk73sbDD+9WxbdkD3fMw+2GWVvs5P6Q+0e
2Mdg970tbP+XibPgXm77vlbR3ysd4HeTf8ZupfubmtlwsePmYZvY+5h3CeZ9
BlnebEf748RXcJxv12tPAa3/qAcMEY43+P1Yepr2p+p8h+B65S/+dIX2B4t2
wrdadc7uSPvjpJfgQ/JXbXvSccUrOH3krdubWH7zGYr+64LGrxV7/mgHvDUy
53kz9r5uNaw6unBNU5p/KIvgbgEbJnuz/XeNhwk25yMTa2h+LdsGc4tiSz/R
+yn4C7Dv0anrXGh/kfoFbD9/+KckNp9uIMX17MNtFbH3CfSCK9ZtSktn/d1Z
OPsKp9xDzxNo8+BIcafuA9j4px6WLG+rsGT7rXoMR34wGjJhDcW/fAp8PDn1
siO7n1wHB29wOLef7V/s7oLfb5n2/TN9Py+DM1J3HixkzysGwkPCqwtTab+S
9Dccu//X1eXUXyq6jkD8XdbqDrP3Y02A+WPRoqXs+c91sFF250H+7Hmpk3DG
gX+v3dn9TrGr4LEyUWovdv9rLKw5/2S3M1t/Xw1/5c8YhLP3G8QI5sWvN7Y8
TOtvsiwcD5UFdM2n8b5u9EjBmVuSbGNo/VC0Cm5x5X7T+9QepdFwxgO/Gj+K
X8V9OFd9u9ludv9LD1eXlFa9p/0XkhWjBDcKfbxwD60HyY/A0l7jyu5RvCjv
wlYp6gZd2PshK+H6DWOe7WfPq7Ufjd+fYR+URe2TPySYb33boH9vFg8aHNfE
DGuSS/fzdOVw9Ng3o6rZ/aS2boILxj88PJ/WK6XDYKvLVxrEUX1qb8CrbTJ3
NGX7f8rgnlbJV5Mjhv0P6dFlpQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.35*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"2004\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"2012\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3281904000, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.281904*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox["\"Log Returns\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.5280658380019197`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxV3XtUTN//P/CTS0piJEn1ZhAlxbhVFEZCbhmUW8m45z7kkoRBlIRBiKJB
JbdMiUIYhAoZSSrJICTFhBJF3/N87c9av/V7//Nej3WmmX325bUvZ++jy9yV
kxc04Tjukj7H4f/8f9LdqvLhnIe0Wx+jsGG8FVfISaLS+8th9RvYYHXIkvPL
YJ1hMm+BrTB33TRYHgbrhLqrf5fCqhTYv/PjlW02wNoS2GNXccQoGSxokcI7
ovqPp3orLO4La+MHzdgRCHPFsPyYsV76dljU7DLvguQ9k0LJ0t6w/v6bWzk5
pXc63Krwg7FvECx8CXPzls3/QemV6KXynq/3YJkf/b68Fxyy76ProwBKrzcs
D8hOyR5M6d0CKzTBG0YvhGX/4KET3H6IKb1K2yu8o/qmFQiDYc1kWHKyy+h/
iyn9m+C6olWdVPT3ojPwGh/vxk07KT+7X8XvResyiiZRfk6ExUcjl8cOo/QH
wb1XOI4+Tb8niYPDTAbfdlxF6c+FZfMf/nan3xdMSOOtPtirV/4oys/1sKRT
lbphCaX/JMxND4p/bkPpfwR3XeRzaSzln6aG/j5krmcF/b3iRDrvW6b3PlXu
ofRmwVbjXSd+Wkfp/Q6LPYSLLOjvhf9d4501bURp3TbKz2i45Lnzeh8qD+19
uNymZw+r9ZReHSwui7pY2pfSa3Ed6ft+b0KngZRedzh4yfCnx6m8uXtw4cnd
ZTMXUH5WwZkXdFwqlZ+0ww3eQasXjf8VQukfDqsWZSZJ/Sj9S2HXr8e1Dlso
Pytg8/zAyb/pfuSmGfj9E/Ie3zZT+ofCuTP2LTlB96f1hwUdztsEz6L0H4TV
w5opXw6l/Gx7k3ek97g0tzWUny5w7r4c27+UHm4hrJ1bsq+S8lekgNVWFk0N
J1J+Ot9C+3DLqvg9j/JzHpxpMifchaV3D7zzhcGOphGU3jRYOeroSjV9n+ot
nLHeXpFC+S2W3kZ77frr+iRWf8PhxKWjOclqSm8q7DH3VwvFXEpvKZxVPdNn
Lmt/hmrenSI8t/ek+qcIhTlFstWdt0ORn8mwbqtgXQKrD6/gvDd/DVwofgj1
76B+xT5yOkz3LxHBfsvGDXLfT/mZBBvMWvDK2J/yswgOTPc97UK/L256l7ew
ZmjJlN2Ufge4/tHBGU0jKf3TYF1WhejWRsrPAlgQtfPPWUqvlLvHe7X7lVoH
qo8KOzjTclVtd2r/ai+4tOhQtiyU0r8Z3pzTpmAkpV/+F1YG2+ndpfxS2WQi
PZNX11eOo/RPgjMNQnbN2UXpD4Z1TSvbmVD9FCfA4mmyojJq3xrr+4g/o1Oj
LKl8uInkP/b/WlI8EG2A871zdnSj9i09DSc4HSxJYPX5CSzL/aZ8QukRjn/A
+26TjCN7WP6ug9WPr3xfQPFAroSHXgnYv4Suq3LgzE/OpfrUXrQ/Yc2c37Me
Tqf8DXiIeFExKTN4JeXvcZi7lZtqTPFC8xAWO85Uf6T4zn2Hyy6H9LWi+xFZ
ZfGWWu7pdY3V50yYu5w57AeVp/AbXHtubs00Kg9Jx2z8/pbDx/r4UnpHkMNM
wwaxeHY3m+LDRr2FXpSflTBnxz2Y1YvSa5aD8mgxUnlzDqVXDPte2NTFfy2l
dwnsn9Pew43ak/QznPj0Qe9tVN8V7R4hPnS3iTCm8lIPgXU7Sl51p+u6RbBw
VXS7S9T/CQ/A+frhR4dS+1YJHuP6t2/d7UZTfg6G665fmJMjpfQvgOXjO4lt
HSj9+2DJkPTjnlTesmuwc9fIr7OofXPOT/B9DQlrBnpQfs6FrdUta5SUX9II
WNLG1iOQ+lvFVdi34dkc0SZKvxbWTnIJ96H7ke/Kxd+HrN7UhMXjy3DlxHyB
DbUP7WtYfWTutzbzKb0GT/F9X32uPqT2oNwJCzvdGB5O/bdGBav3Zc84TPnD
vYK1Xy6Prh5P6W2uQfsznVy6nn5f2gdWlaU41kym/LwIqz/7Sq9SvBAWwtMb
j+cGUfuVNHmG/L986Osqqp9ye9h93jaLHnRdNRXOv7yp1oL+XvwCVi8sD/+2
gvKzEdaeX3nbj+qTsmce8nfedqGK2otmChzlPKbxHf09txn2+Hm6ezjlv6IB
FhaHH29F9Vfd4zlv+1M97vym+qiTwEr/bp+cqXyEG2GpzQqBhPoLSTwccfZ3
X3/6Pm23fPTXpifn6VH8FXjCJZXx78PofsSBsOLX+C+11J/ITsHSmqQvefR7
ysew5LXXPiW1H9G4F0i/ib5Nt0WUv2th/0jzU25svBYLa7u0metA6VNnk++f
OThPQun/AavH/CwMd6P8XV2A8hl46oCVD+VvDCx6Kt6bS+1b+wCOOSQSc5Re
QTVc2GnmzFwqf7HlS/Sf9fU3TlH6NEfhhlCuzIv1H5l0feru7X1p/CH6Cufd
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
PiX1aMLb/Epgs0Rq/4rVsObCXb9Etj4VA89LCZ8zn/JT9wAesH9EDzZfEFbD
+aJnX8rp/lQrm/JOtwp9KyBrj8Li0AXiV6w+ZMKCXjlWVTMo/V/hAT+lu20o
PTLzZrxbXS9v5Uv9megObJ6Q1sOX+hPpF9gqpbZgN1tfbd+cd+b55N0GNB5X
D4Ol7+zdflJ9k9yCH70fKZxP8VxeDnPx3+wSKf6qTPR512VzDS1Y/XWFpdnr
hvSn/lawCDafahUxm61PfaDPO8ZuXk3jBU2bFrwrV1tL3tH8mRsMq9ocH9Sf
xi+i+bD57UV+IYco/XvhsLopHn0o3ulaGfCOGvn8xh2K70InmMv6ZvdZi/5R
Mgf+GuQ8u5j1x7thlfq1Xzx9v+oKfV5hOOUHtR/xAEPeWQtHHPhA9VXmB6te
6nxU9P3KMDhfrnNdwvq7FPjaqk1GRZQ+7jWsltUm9Kd4pvBpybvJeN00I8pv
3SW4laHjjcesfyuGy8vzfP1Z/9HMiLepxeOim1Q/tNtgpZVOLKD4JrgIN9zw
+b6E6of4JdxytvbsHLb+oNeK9+GmFTnXqb4qe8HLzm/eb07xV3QOFmVv1F6c
SvmZD0tTW0Qto/JW/IMNE16HPKfyVtsa89ZNrI9cSf2fbjKsOqNs14HSL38G
V7vdn/GO6peqHvYauK7pU1YfurdG/qbrch45U/olsLlOfOo5S38Q3K+bKjKD
1Yc6WDXF454r3S/XrQ3y6255t7VUf0QTYPGVLb9K6H6k62HF+fB2k9n6z0mY
W7v49HiarwiFAnzfTGOT5mz+ORaWlJ+oPELxRr5GQPVxXVAxtS/VCVi63uFI
Bf2eNguOTFet8qX0yka3Rfsra7eFo/inXAVLxl3oWULrmZpo2ODL6g0j2PrP
A1jVcVPvcmqvIh0s36N1k1L9Va8w4e28szq6M6vPUbCiKtzJn/ob4T24rPLV
lOWUHkkVnJXSas1yiq/yDu2QH/rGB8JoPiw4DCeOHpRgQfVbrIZFol5OK6l8
ZRUw188rZDbFP6WpKe7X8NiY9XQ/mqFw3Ii2e3dS/VZ8ghXc/vF11J+q27bn
7TvC+KkPxVOdCxyxK3okW68XLoTDnBS9a9l8swxWr2zZZxQ9/9C2NkN+Rp+c
Z8Hma4Ng+fm0SQcofovnwRLf9l9HUP2U7YF1Vm2HN6H+mWvVAdcf57uXUPwR
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
77SUPQ9I5S0fHNs+dhX1h6JSXBfVfoueQvFAanCe92JhxldDVl/7nUd/2a1V
njiB0u+L6+I5zcd9ZvtdXsEes7o/P0n3K29+Ae3PemjUUYo/qj5wemFATRMW
b2fwlvu43w6TsfSH4LpYXZx+kOq3sslF3A9nv6WY1g809nCoNNCvH6sP0+CC
AMeIbuz5/VbYw6561h1q/9Lz8JmYldNW0/hC1zOJj3/HhoWslVN8FHrx5vZ1
TDDtzNr/ZjjP5mnhCba/NhF+1SbMktUvVR48c1zRymb0efGkS4iPpiGW3dl6
xEY4zmFt5VW2XzUeHrj/+nkNW099Co9Zv2Irx+LXH9h39MDDL9j8LVCF9pl7
qKgrjefVp+CcuqxO19j48jH88UDU079UH4S/eMtb7Vli05nipzY2Gfl3uEuf
62w/RA7cZlDyqDt0/+Kf8E/NFN9w6l9lnVLw+Wb97CKpfSo9YKu1JSUT2P7a
h7Df0jqT+VTe0mq4ZW7FtTC6f4XlZcSjN0Glh6i81CPhuMjCUGe2Xr0SvtM+
WN2a7b//Cgv9e0aks/7LPJW3btyxThtpv5bWDT57ct3hMvp+wXJY6xzo153a
h/gIXGj1wMOI7Vduf4W//9PbbicYUzzgxFfQXrPcqjpRvBUtge9Myul9nq0H
RsKe3v9+OrH1tFtwF87u2UzKX+GQq7xN5n754E7xUrIIVt87ts+Inh/I98NV
DdnvKig+qG7ArTNXe3Wg9qb9ANcNr9wrZ+s989NQvhUnk89Q/6fcCwtF50w2
sviQDiuHLA43oXjIvYej86O7eFJ6RcbpuH4sdk4EW/+9Ahc9aMw/xMYzWrhw
X9cfMTTelLS8hvHY3VzxVCpP+QBYWV0y8Dib/1yG7TRHWlrQ34tfwxqnGnsX
Nl5vcZ13k+8zh3uz9cC+cMi9l8vn0v1ofGCxyH2akj1fKYaVP6eeVbDnK81u
IB6eHVgRT+1V3RtWNT9xaB97H8t0OOPcy3E17Lz9dlhteGnCG1o/V+ll8H5q
nNb0FJWHthf8533Td07UngRTYanz+ZoE+rxYDuteP53JzovLzsEyyfb8QPZ+
k543edv33aL3nPpH0RRYMC+n4Q3bn7oJjrmxvdNptp/jDDw1Y3mb61T/1M9g
Ve9MSxd2nlNyC+3HpKnPRpovyoNgaWe/B7vZemscnBmrfPWcnefMhdfu9zw2
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.35*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"2004\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"2012\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3281904000, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.281904*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox["\"Absolute Log Returns\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065838070628*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
nCuLOk/+zyoV0Tzf5KKTbP1PheWh3oHbX7L7oKkwO1u0+YUu8/+pULDbe0xH
n/jzSUX9t+V5mgtJXsGpmJUtrys7n+pzUqFj8WN8QAH5x6RUXJ7x3mtcH/KP
3FRMHK5aMc+c1jdxKnQN31v3zmT7v1R89Z3oOVGD/GeRVD6/P3zoqKT2panI
ujDxeLMO4bJUZPgPzUstpfYVUnnbVetN+EPlNamw/qv+6rUZjVeXisb7u0Om
s/XjWSr0X6aefcxn9xuk+jl2f37BDZJvcypMD4aoiWpIfu2pODuv6bLbBWrf
lQqlSVa32/qQ/GTSEHbwkcdxY5KXQhoKdJ8vyjVl+/80cP/TUev5Te3V0mA7
6dvDnUOovWYaUlocqitkaL7qpeFLrsKu52Fs/qfhba6NZdcNwkZpeObimP7g
EfWPNDQtGpsc+ZvGN0vDxedn4drG4v80CI0rrq3pT/ZrnwZOZ+/t5O2EndLw
zb3854SzxK9bGjY+n95mW0H0+KTBcsAfTm8SW//TENwWa1RVw9b/NKD312nP
SSS/pDR07ThmutqRyrlpONSyPurJR+b/05C3o9/p0cfZ/E9D39FzJty6yuZ/
Giptd3gbTid7LU3DpfoJbcd7CJel4UyagX5VI7u/k4a4UwcOJ/Zn/j8Npb2t
r+MWk3zq0nAg9EtRYDHTv5TfB5MeyVmTfTRKx9tzc2ptNOHmNOxVdOjvtmIP
6T8N5nUj2t+y9bUrDVl2bwtWzqL1XSYdygVfXT/L7iX9p8PmcffBAmtqr5yO
gOJj14ddpPVaLR11JStHRlwpIP2n43lky/DX/YpI/+mAnDhz0NPDpP90aGdE
bm/4QuVG6WipGX5idx6VIx3zoixNw2Mo/jRLx0rLSy8bHxI9VunYb2NYmudH
8YZ9OvZckFnmtIzocUpHId/zsUZjIek/HeVXB2anytN4PunQ4lwuyMwtIf2n
Y1Gu4pOYbwdJ/+nwTvn6w2Q20ZOUjm8/VXIXHTxG+k9HlXhNQePSk6T/dEj+
BfRwDM6Q/tNRqu2iH7SScJGU/ojta1pXniX9p+OfbPOunlEXSP/pUH838+r1
oDLSfzr2uoyonu91jvSfjq558UPvO1J/demoFdtuGtN2mvSfjs39Mt2wmOhp
TEdi++22a05Eb3M6PrmvLDKaVUz6T4edVtOgIXeovCsd+n9Mch4sPEX6zwDm
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
6xPj6LGqvBR7ev8mEOPq9dyZ7h2kf7EYh9bofHHbSPrPFePLhr8bUmTZ943E
iP3WGPOUfQ+8UIzLGg8Doxez+S9G3Jh2w3t1RG+JGHvODRucLGH5PzEqUr30
r/iw/J8YXW15JnsbCJeJUffLP/ZwN+Fyqf28WrPe24ndvxYjOuG0bVUWjVct
Rn2sx5Fd7PsnNWKMVEx3apxD9NZK6amJ613jyL63Ica8+uEpa5OI/0dieOpv
WDFFncqfiXH7TeKPfSx/0yBGi2TIwsw49n0SqTyXv1QwTyH/3iRG6KH0V4d7
Sb7NYgg6PrzxYt83aBVjYXbfSfsMyV+2S/l5Ut08kX1/oUOM58e/P2qSEO4S
w1YvN6DPB6rfI4bk6sDS//7v+38SrBmj/+Pne7b+S6AetnSRyTH2HkCCfVq1
x5byyJ4HS8BV9fDqz9ZTZQl2qBn+aFWk/lQksDSwddD5RfJTk0B7ziDX72eJ
fg0J7FT/jew+xb4vI4HAYsmt2jQ2/yXgx5eNrT1J9OpJcGbO/fDlXNKPvgTZ
nP2Kvr/Y+0IJtmUu7DuYvfcylODj/sE+D2cS/0YSqMauUii6Q/uFhRKUnNv+
tzWDzX9peekDoakWy/9LEH/EpvT4GcJmEgx9/i1pWAjL/0swYIH708ZQ9n0K
KW4/d2EEj+i1keBwv/tFok3kr+0luPT7fOlhdn9+kwR3jLTbypvY+xUJ/J8t
0P6qy/L/Eoz2fuqtv5fqu0kwQT9c44IX8echkfqrMAt9azb/JdA93fnu82HS
T4AEYwwHp/YuJH6DJXh0+tOHK4tpvHCpfLbmG21m7zE4Etxt7sh4UEbt46T6
OKs99lUS4SQJnm7X2lp5h8ZLk2DgCznfvEfse4USdB/4oBovYvG/BKVtubNy
awmLpfpZcmnydG3Sd65UPnrLPtxj9pkvtbdDxtc9BxC/hRIcsP1oVhRI9BVJ
sD+yuO/TEYRLJLhY8iVAppzal0qgNCt5VUwN2esZCSLb4oP6aLPzPwnyzHTH
6jD6yyWIO7z0/vds9n1oCX6rLbp9P4jKq6Xt33xa8zGPnf9JsGqJxTvNACqv
lWB1/Pi3Jkz/dRL8t1y/9/pQktcjCdYPUb+mWUz8PJNg7qHVlU1x5M8bpPb0
du7AH6MJN0owXs9worUi5dOaJPjVHdnHRUL5rWYJjlk88dNJpvtYrRL8eXtl
/vxwyte1S/Dh1SurlQPo/meHBD/0ej9UDqL7pl0SjJXbcqRmF91n7ZHgpcOT
7iUn6D6oTA7CjQWJ63wpHyiXA9WaBS53Oun+kUIOvIsejsr0Zvd/crA9QWCn
eJnyOco56Ehc0PvwH+XnVHKwYOWwB9suUHu1HPQ1nzFyZCHRr5GDSxO+Ghar
UH3NHMQptS/sVCOsnQPHnn9fJO/Z/b8cYJfMu+V3WP4vB41hN3gTPem+l0EO
xgbYztI5ze7/5cCtVGlOoQbL/0npc4+8qHud6F+Yg9zQjEVt1iz/l4MdGtZX
Zt8ifkxyoMC7s+zOQxrPLAcRtr8ejxzK7v/kwOfq96Xp8lTfKgfJ7Wvma32k
/mxykJSV0f+VFsv/5cBz1C2vKlPKD23KgUt1gX6hLcv/5WD9pie7DrL8qHMO
5vwyPlihwe6z5qBOGhRNX031PXLA3Wbh3zqE+vfJwdD+Ti5lqsR/QA5cHw6T
DMyg+3HBObgWs0Xd5RjpIzwHbVUdUd/uEv2cHIxx/rzZ2Z7kHZcD0RKlkNOH
CCflYEisQsyaAmqfloN1U99PtXan/rnS9jd/2UQICAty8LEuQScjnfQtzkF3
81zhxjgqz5XaW13cm64x7P2MFPcLHvdoKsmvMAcffoU4bQ1l+b8cjEod1XAp
iOX/cjDp5gfHisPkD0pzoGma1rFoFH/J/wM75XCB
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Smoothed Hi/Lo Volatility Measure\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065838085979*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
eRzid6uUH78HpPpMJf52SOc/5Z4w5h/pU3cMxMNtfk+LZ/W/WPz4aZI2wIbJ
PxacawPfjP5M8lWIRaXa9ODfLtSuFIs7l1Lv3i8hf6oaCwV+3NGBB0lemtL+
x97Ze5dTfNCOxe+g+9nD7xA+erHwXPtLV8+Z6Ecs+PcOQ2My8dMkFqk/j7+x
H0vrmcci16VN+PEv+QOrWBhvcBkt+4fdB4jF3dM9PgUFpK/O0v4PT/c1P0n9
PWOx3Rzmnz+TfQfGotgpZNeO0+Q/OLH4NU9Ra5KI7CU+FgUVZ0MNHag/NxbZ
m4p/L3tIsFgKi3x7rr4hOCcWXYPEhrvnET55sbi52Fa3dizBhbFQHDUw8qw7
4VMSC/vOj0v+WNF6ZbE4pts669oKaq+Mhe+t71+cPlJ7dSyeaq2qD68n/1gf
C+dTch+XppM/a4pF5KSRkhA/lv9L+5vmxDQkEf86YuG4W96330vif3cslJYG
Cj+uYPdP4lAUXOE8M4rsRy4OC3xmxtxKJn1SiMPb7wsmX89g8T8OWwyfnZZ/
y+qjcfDP+vjGPJvJPw6+q1Yryqxm/j8Ojbv39NReJn+oFwfL2fsUzt8hfBEH
9bnlbwrnkj6ZxGHMpjF2bk6kP+Zx4F2c+jv9F8FWcfixVLZ90SLqbxuHX1yN
K64nCT/nOOhMVBdq2bP8Pw69+XWldn8I38A4tF7wVv7ryu7PxCF/uf+rlUEs
/4uT+odHM86w+gY3Ds0N6WK1Whb/4yDsPXo0+RXBOXFoz76V0OnN5B+HWE+7
/2YtJf4XxuHPgk+B1QmkbyVx8OQPeOXVRXCZlD9qravmHiT+VMbhp/PZ25wG
0q/qOGTuWRni2Ezz18dh1alqlb8DCW6KQ8KVG049tkz+ccjVDD2WM5riYYdU
nqfXvmoqzyL5x6EpMspzSnsOyT8eXjZbXjgr5ZL849FxbpnPA9dDJP94/J1j
fm7aHuqvFI815RPXPplG8lWNR0zUxeyva4gezXh0OR8Y05JC+qsdD+3bJuHD
61j8j0dDMXde30uEH+KB9n+VqTuJXpN4aFh8Lh69ncabx+O3Z4zWdjea3yoe
19QW9azgEb9s49E5JXb6tllkH87x2OAtGP19EbP/eHxyN3MwZ/EtMB7TerRe
5haTf+PEI+e8asgpBYLj43Fj/Kf6R/Kk/9x4yP1XN/eqHumbOB7hkq5J3qPZ
faN4aD5sPetQQvjmxWNY3KAfz4YSPYXxSNl6xzlwKcEl8RhTsr20YDThWxaP
P2+7Mko0SZ6V8ehrbPdujiWtVx0P3fhy7lljJv94eCqmtPwZQPQ1SdcfPOfl
pJ0s/sfjyN5Nn68YMPuPR97uBpkxR6m9Ox7TN6TNPnOZ8JFJwM6U9fPUcwmW
S0BVS3y22T3ir0ICzBpq9NONCVZKgLeOQYbJYdIn1QQ8uOoYZrKG8h/NBBjf
kJRuUjlA8k/A+OX3Bin+Jf3RS4BKs05CZwvBSIDbICXL+BkHSf4JCDu2Yof4
IeVX5gn48vpkH7NG4pdVAszLf82x+sHOlxLQt2h+0PYAtv9PQEGy9tG8s+Qv
PBPg/3LHkalPCQ5MgMzCOesbrGk+TgKu/p67Q7ud+f8E/OuZoviC5VPcBIwc
lbgv+jCz/wQcqo14ecOUnU8loPTCqQeepRSf8xJww8l0iqktwYUJaJx+cnPu
G4JLEnCfc/yjyQzSn7IElHmaFwdfI3lXJsB9hfJw71vsPDcBb66Y6RQ9pvXr
E9BqevNsTyn1b0pAjZ5M1XVjkndrAvxOnjzcq0H9OxJgu2d8bKAd4dudgLYF
1snycSz+J2LRqM6fEXcofspJ4aAnKlNLiL8KiWi9HOa77jqr/yTiFO/G8DRT
dl8rEZkeTsV/vhGsmYi1Ps2hnatoPu1ExNyLrnCKIXr1EhFmejF7jCW7X5eI
Zp3t3pnHiF6TROS2aS4/NJv6myci/sC0hFWLiD6rRDw5b2P3Vpnos01E0YhL
mUc1yL87J2LJm+E7Wtaw+zaJmPjyca7hNub/ExGdfeHLnV3s/k0iHhQn6Kss
YP4/EUZdP8/XxrF6bCLMAjqzXg8jWJyIfgvj1KZLiD85ichxW3hKsIPkkZeI
G/nn361zJ7gwEeH9fs/u/5rWK0mEvn7I/c8idj8rERqnZo73ZOerlVJ+O8z8
GpvF9v+JwLrGaD9Wj6hPRKl6jNLbFHafUdpfkBGu7Ub4tCbCKtjKvEeB2X8i
zlU4v7YIIn3vToRKwqKerc3M/pNgUPjxfXkm+RO5JAxx9do2wInl/0n4HL5x
VP/nZD9KSXjxNG7XnR0s/09CGQp3jykheWomQXaY+W87T4q/2kkYbNF9Ie4S
0aeXhB/6mc+UB7H7A0loK4gK8GL4myRhy1352onhxD/zJFTsmnX6ohfhY5UE
mdBXJRGP2P2CJFxfWS35mE726pyEGT+ag200CPZMwq51fls3mZL/DEyCstz2
QI097H1IEkp6C0bo/CD645PwZFLNDYc1xC9uEub+6HvbQovijzgJF4J/Vpn0
o/wrJwnHxO7m/tYUz/KS0OrUZ1WFMbUXJuGUwrN4j+EElyQBg1rePEpk8T8J
afV9KntlaHxlErqP5grjPhFcnYRfqlljzz6n+FmfhIkHjsdpfmXxPwmNtWk3
uuYSv1uToJPf/vwwi1cdSbAJuB9tWEP0difhlnjmtNDXxB+ZZCzKMj0dN5vl
/8noeOT6brc+8UMhGUXaQ7cKj9N6SsmYkjS8RekOjVdNxjhfd68D+9n+LxlH
rccN/OnD8v9k+J5cvqjyLav/JmNtv6eOfG9W/01G3OuJ82OX0/omyVB7v8ks
8hvNZ54MhY2f/r5h+YRVMswCLyTpJ5P+2kphLdMiWRUW/5Mhu8Vi1Nt9NL9n
Mnhc+cK5hiz+J6P+05Xdzu9InzjJsMk6VWy8kMX/ZJyo3Ooym8fuI0jx3ay/
6kcy9RcnIzH6Tov5N1b/SUah0e0fvp3kv/KSETL09r8kU3ZfJRl1/0ntcxHx
oyQZS0/ubXH9TfOXJcNFeczmBcdpvspk7NFXqT36nvn/ZKSpeJ/I20D41ycj
+dPTiv3J7H5LMsTOrjXvTEifWpPxTlV1ztUHrP6fjNrpFpFpXFb/l9J/8tnR
pW2kXzIp8E+2C++dQ7BcCrif+I5fdlF8V0jBNcew3vyppL9KKUh8/bHdRobi
t2oK2lYLb7e0UfzWTMGvw/PfjrU5SvJPQUVi2rR+guMk/xQ4rVQ0CjifT/JP
wSRPmaVDZ1O7SQqmOOx4t+Mv5Z/mKdDhFZ4OSSF8rFJgtHVD22Vnwsc2BQPj
ZEcd9iV6nVOQueq4nIHqMZJ/Cmw7nLxMZhWQ/FMQPvZ5wQ2ZEyT/FHyYcmXD
mz6HSf4pMFZpLDn3lGBuClZqjdzKmXiK5J+C2HcHK5P6nSX5pyDUItSjreMM
yT8Fc9duOvfhFbUXpsDC46azqmUxyT8FvNP6B45bXCL5p+BbxaLZig0XSP4p
SNW461ezh/pXpyCdO67PBmWC66X4XN7pa/30PMk/BSqeLTVOW2j9Vil9BV/5
u97nkfyl8jiWVbHiHfG7OwWBu8b+9HEtJPmn4kqref7SFBovl4rexqsbyx6d
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
hRcezUuZ/WdgpandyMlxpK9qGTCeOfqNqy3xRzMDFaeEwfVfqX1mBrry7LtH
adP82hk4Pd9u1SkRtetmYMoo2evjRrB6s3T+sk0h45aRPPQzcKv0sbvGF3Z/
PQNtSxV7tluTfRhLYcedMeP20HiTDHTE7A+LqKH6vZl0/hPvlK7/771jBhat
DJP1mEfrW2Zg+IbJUW9Ws3p1BmZrXw+bcIjWs85AVt7VwsX57PwiA2Zrd1U2
PGTxPwMl5volN34T7JyB9t/LPJWZf3TLgOoBy7lR5sz+M6ASEVmbnUf4+WZA
ds4o0zWdpJ+BGdDbrZY1rojuS4Zk4I1v+YKfvez9fgbOKdl0y6bSfYzoDDSW
6rfWv6D7KPEZ0GxV+TXtNul/cgYqf6l7fGDfY+NmYMGIs0fmxFA7PwPrPEYX
uhyh+2biDNjeOJL41JnuY2ZlIHt6ncYDEd2PycnA1F9tWr2W1J6bgbs3dFfc
q6L3Q3kZsDdc/Vm/gu7jFGQg0WHjrnQNdr82A4+brK1SuogfRRl4VOc+ultA
+JRkYOLxxD3CLKK3VKqfi92GBUwi/pRlIOVc4+CDN4jecim/V8v7x01h9i/V
B1n5lJafRG9VBvY39C0IyGbvTTOQ0+UkUfmP1n+SgUEyXIH6C3ZfJwP8Da4L
/uynePAiAxN23eOZy7Lz2wwcndQ9710+2VdzBoqL7LXkmH23ZiDv8/F/Paye
/CkDfhWFoS/92PleBhZqb4uJmk/21ZmBkz4/3rg/ZPl/BiIHL0fqZZb/S/VH
s6140i3yJzJ8nL8TGfKrg+aT5aNVEsIZ/R87D+JjSp4P71E0s38+jP/Z3J/L
8l0FPtbu3Oas1UXzKfIhfDXp6lktFv/58M7oez/vJrN/6fxff3TO28rOj/gY
1v75+POB1K7Gh/PNh3egRv5Qk48vD1VW90QQv2fyMeeFp9Nc9n04bT7m3f9P
NMmQzst0+chcrRF9gemHHh92Yyx08/KZ/fNxb9RdHeVA9n0TPpwEw8L1VWg9
Yz7kfyusvrWI7NuEj2VuvcVnekg/zPhoth7a4T6Lvffk41Az/8H2HaTvlnxc
/bQhoWMa4WPFx8Dl6SfGs/fO1nyMdCpt6PzK3i/w0TQl5v3Zz6Sfjnxcmqtv
pHSG6HPmw3SsZ+bC1TTejQ8X228/+3wl2JOPSse/xe/Y+wNfPrZUWSed20bj
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Gaussian Filter Hi/Lo Volatility\"", TraditionalForm],
  
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.5280658380996237`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxVXGW4U8cWDS5FgjsEdwjukIs7wUtLaXBaWgjuNKW4hkKLQ/AWHjS4Q3CH
4A7B7wkW3OGFvWbxneFPv92ZM7Nny9oyk5uzQ89mneNaLBZ/Qovly3+j/+zt
/bExBdtO2fOyQBFHlHZNiNKvCnz5H4W/0N4NUXp1nZuD0xaT8cCNr/NlPJJk
TWzMkLTRGe8KfaE9Y9eo7/sJ7V8bpaNfr67TXujQ1SidY9SDppuzF/xCWxOt
VeuvFtpRIkrL8lcLfKEtl6N0rypJLyyOCG2Pv06Nt5X1XMXWKX7+Ab/fRunN
2b9sIPzaLkTp48ei/xoW/UI746zn/jLuKbxe8XcT/LZcr84zGPz+ptPuT1F6
ifsLQ8Kvr8CG2BhhJ6XwF2wWpZsJA/mF/2FRWj6fLrR9eZR+GN19VPd8Is+8
GykvGY80idKl5J/QtsFRGqqS9Z1LorSwn0DGPSc2Ul6ynrXRptiYKHNRDmXc
MYD0eBl3L9zE9YX2Hf06LvODLzdRvjLunb85NqauCEjOHzhE+qDwE3m2Wckj
N/jNtoX2IN/752yhvcj80P4tSh5phbZGtvB80H/mrTyP0O6aW6kfyHPvVnX+
UbCHR1uVfo8J7cqwLTami/yT770x28iPjAe6R+nZs778k3FneJt2Hk/a7bQX
2EPV7Zp9h7ptpz6Ftk7brsnHl2qHsr/yYo/BSjsoX7E3S5cdmv3ZvVFa1HVB
vo+U36nk4ZHvbR13cn+Z75y0k/vJuGfTTupbxv03d2r+6nDtIj9Cu8fvon7l
e9/6Xdp5g9d30Z/gf0kCsTFVZAPIc0yA+CD6CKwJUJ6i78iVgDrffFnPlnA3
/QP+Z9+t1ttRQuS5muNT7CLPS7uVfzyQ+Y54e0jLuLvoHuVfp+Q8vtZReu+X
z/cUE3me30N+5XuXZS/nC+0ttJf7Cx1osZf2JutHhu8l/7Ke5yPnVxHan3+f
dp5Q033Kn9aJPK1D92n46Vi2T8knk/AbzLNf06+lyX6NP/ug/cp+7wGPF++n
vQh/3uOc31RoW8MD1GdxkW//A/RHWc/jO6DkU1328x/h+GLY84sDmv26+xzk
/sC3eQeJ30IHDx6kPwtteXaQ+Ah/zHqI9gR82HdI8xfbk0PEZ+BZpsPEf+BZ
jcPa99Y9h2kfQjseHtb81Z3+iObvPscRDW+CPx+h/cj6LuMI1xfam+aohs+B
Kkc5H/bc9SjnC2378yj1C3yzHmN8EjpU8Rj3Bx53Pkb9C+2Ycoz6AP9bjlF/
8Lfyx+nPch57h+NcD/xPPK7htXfjcQ1PA6HjxEPZzzPuBNeX+f51J/g98Pja
CQ0frYlPUv+ID6NPUv5CB/1fx/MKv1dOUn9C2xME6T9Cu4oHiSd5RJ6rgtxf
xm0Xg1xPxp1xTzEeCu0pcorylfn+VqcoH6Ed505p8cz9+RTPI+O+gqdpb7Je
sPlp7XvL8NNa/PJ+OK3ZTyDfGfor4rPzDM+DeDfkjKYv59IztA/IN/dZxnvE
i8ZntXjlGHiW+AV7WHSW8UBo37Gz9C/YQ4NzWvxz9TvH/ZH/LDhHPEa8PnxO
jy/PddrT+7xG++eepz6BDwc43lrwyPr0PPUDfMtyQenHjXg364LGj2XfBfqP
0PbHF6gvOY8r40Ut/nirX6Q+ZL7zwUUtH/Cku6TJ21/tkjYe+umSFp/csZc0
f/elvqzhR7DyZeIv8KzrZc0f7FMv83zI11JeIV4C3yp8peV7W6crxBPwP/kK
7QXy3nyF+IL8t9xV+q+MO9pfpX6R/0y4SrwAvm24quFt8MZV6g/40O4a15dx
79hrxEfYw9prxCOJD5Gr17R4a0t0nfmD0P5R1zlf4kvov+vkR2jr5evMLyQe
OeLfUPRAxOtiN7R4a1l1g/aEeHfhBuUj8dUVJ8R8EPZcOKT0m1XWC7QMqXiU
U2jn2RDlgXj3KaTFZ3+Bm9p5Qs1uMn9GvjHsJv0b+cT7m4yPwk8w7y3Gd/Dv
vEX7EnnaB98iv6hHltzi+eBvuW7T3hH/Gt0mvgjtHHBby0c9C28TH4DXR29T
3sjn69/R4oW77x36I/Bi/h0NH4KH7vB8Yr+W53eYzyC/73WX5xU8DMy5S36F
juy/S/sQ2pn5HvFK6NDMe1r8tu69R/8Cv4/uMX8BvxnuU1+ILzH3qQ+h7YH7
Wv3jCt/X6hlv2ljt/IGqscRX+GO3WOYryCfux2rx2Z/KoL0iXlcyqE+JD9Yu
pPshvngN7id0MEWY54c8K4S5H/jvGNbj36Qw8UDW924KM/4h3rkeaPHHM/4B
7Q38rn9AfmU8dP3rfOh7zEPiD+Lzmof0N/B39SH5AX8JH9FegWcjH9G+kO+s
fsR4ifh86RHrL+g/3mPiCfKLoo8pL+Q35x8TT4G/lie0P/Bb6ImGz8EWT2gf
yNfPPCGew/8/PtHqiUD+CM8n/hJpGtHipW1ohPqG/7yLaHgfyvNUy2+tTZ5q
+ahj0FOtf+Fe/FTDa0uuZxpe2xs+I74Iv67+z4hnqJd8z+hv4P/IM41/Z73n
1DfiQ5/nmrz8857z/OD/4HMt/7Q+e07/gb/PfkH5I5/c/4L2iv7DkxfcH/6V
6aWe7854yfMgv9lDejXy9YcveX7Ya/pXjI+Qt+OVlm87dr3S8he38Yr1C+JZ
mtfEH/Bf5TX9DfLu9prygf/fe63Zd8D6husDryq+0fzH1vmNZm/OKW+oD8gz
+Vst/7eWf8tx8N/hrdavcU98S3wHfm18q/t/mXeaPF0/vtPyd++4d1r+HFj3
TvP/yLV3tFf4V9v32rh/9HvN30P+95r/Wq+81/J3R4IPejz44wP5hX2s/qDF
L/vFD1r+4Yr7UctPbSs/avWf89xHvd74/JH6BH4V/ER+gV/NP2n25T79Scuv
fR90OpjvM/lB/6fpZy3e2Id81tYLvP1M+wQ+5LYYKp+DPTfWaefAKA3/hz0v
itIm/VtzxjHM/TdHgzja9+5+URr1Efhf8HUc8j4cpSFv1PN14xrm/NbbO0qb
/D8wN0pDn+hHHIir+PmIev9plMZ5pX/i7xmP/KOfMisevy8p/O+L0vAnGXc8
jsfzSP7mzhjfUPJFP2p3lAZ+yfeuB1Ea/o3+Q7oEhorH6J9US6DOsxj9qZ1R
Wuxvmcz3xEZp+Av4TZ3QUPYCfitHacl/2oDfrlEa8UBo390oDf8tLfJMmUjJ
+2Q5sYeKidR4vzLCf6dEXF/O55qcSJ3XIftFkiU2YB9nhbaVS6zO50c+2T4x
zyffeyYkVvLcI7R/Q5SGfwrtKJ2E9gJ5tkuizt9F1vONTaL2my7jwbVJFP8p
Rd+Wa0kMcz7o/T6pkkcm5I//JVXnaYh+9uWvNOqL+N8o/iNCh0Z8Y5j7gdZV
3xjm/o7jwjeGuZ/ojpNMzT8i8vAVTqbWTybyt69IRv3CHs4mM8z9O++nZIa5
PggUSK70UQb22yw55SHzPac4/hL5+fvkhjm/DuVNYZj7d1ZnCuU/N9EPHJyC
9ol+2psUav17yM9zpyQ/6Ac2Sqn8ZTX8b0CUBj4L7V2oj9tsVtqTfO+sr9Oe
vlaeB/3A+VZtvdAhq9p/FuRbJ5XmX75eqQxzvR2cE6XN8fpAKkPrp0VSGWb8
DPRITX9EvjsztWHGc9ve1Ia5v+B8pNOeDGkMcz5h/TuNYc6nHYE0hrnf5g6n
0fbzpU2rfR+smtYwx3vv/bSGuV4NpErH8+C+qFI6+hP6213SqfM3Rf/hDue/
Qz2fIr1hrm+tFdIb5vsJR8f01DfweFJ6Q4sXyTJo+Gwvm8Ew5wMuVwbDHG+9
4zMY5vwrsD4D8RbxrlRGw5w/eH7ISH9GfB6T0TDH+9CajIY5P7Jezajt7/su
E+MB+qsjM2n6t/yXSYtP9kuZdP7jZSZeIn/4PbNh7vfZ/pfZMNdPzvOZtfjm
sWTh+RCvC2Xh+VH//KuPu898HQf/Hzm+GvVH/qy0N/TXmmWlPQjtDWY1zP3R
wLus1A/ytzzZaA+oP5pk4/lQfwzKRv9C/fk6m2GuR6y5shvmfqCjYXbDfF/m
7p+d9oT8zZed+yF/y5FDo131cmjn9/bJocknMC+HYa5fIwdzEO9l3FPbZpjr
Kb/bxvgL/mfb6E+oP/fbuL/Qjic22jf6l7/mJN7nFvnOzEl5C23fk5N4gXoz
fS7DXM/a/spF+QEfduXS7cHIRXwFv2lyE5/AbxXSuN90b89tmOs/373chvm+
MWjNw/VQj1bKw3wA/czOHFf91tt5FJ50hz0kz8t4B/7L56V9o37ukFeTh2di
Xk1e1m/yGeZ+hqNMPp5fxt0/5iNeCO0bl4/+jHp/XT7qD/pvm5/zYb+j81Pe
4Nef3zD3n21X8mv+aV1dwDD36x0XC+j2GbegYe4vWn4vqOWf9pUFDXN97TpX
0DD3N7yfCzI+wz4LFqL80E8/Xcgw10v+D4Vo39BvvsKMx0JbmxamfUE+Jwsb
5v598G1h+r+MW/IUIZ7CHhsXMcz9U9fAIobWb3hVxDDXK7acRQ2t39SgKP0V
/PcrqvmLf0FR2g/8JXsx6l++d9ctptmPr3cx5jPwp7nFmF+A/4PFNPzw1ipu
mPsvgZ7FtfNGZhU3zPcVtn3FeV7Y5+PixF/Y4ww75Q9+d9uJX7DHB3bNvn3p
SvB8uF+ZXsIw30e5dpZQ9tpE8jNvbAnKS/KTQOqSPK/kZ5HKJdX6c2W+Z1tJ
df6FpUSed0tS/uj3pixFfmU9a8VSxDfcL3cqZZjvm4O3OP8d+v/JS6v1cyKf
LFda2XstyQdd7Uur73ugvphQmvko6p2kZQxz/9ZZugztD/2SdmW0/Mc/toyh
3QesLWOY+z3uEmWpT9zXf1/WMPdzg6PKavmpxV+W/oh88vJXGvXPt+UMc785
MqIc5Yd+76pyhvn9iPNCOcPcX7J6yuv5+Yryhrn/4T5b3jC/P/B9Kk98RL5Q
oALtB/dByyto+YH3VAUNTwLvKxjmflkkb0XDXC/bnBUNc3/Rf+LrOO6D3lQ0
zP0sa+5Khvl+y9GoEu0D/A+oRPkDz15Von+g3rRVJv6hf1a/sl4P9a1M/aM+
nl/ZMN/XOLNVMcz3R546VTR+/L2qMN+EPcypQv/Gff2BKpp9+GpWpf5wn9Wj
KvnD+41ZVQ3z/YR9b1Wd/0ek0T+JdK9mmO/jbH9XIx7AHgLVNPvwhKsZ5vdY
/rQOw3wf597hoL3h/cZ9h2HuNwZTxWj1o6VyDPMr9CO3xhjm+/jAnRjD/D4g
kqK6Yb6vsVWozv3EX50dq5Mf1Gs3q1PeqNeS1VD0StwHla1Be5dxt6uGYX6/
4htfg/gLeSapqdVHrlI1GY/A/w8cx/1RYExN7i/yiqypyfwM9bu9ltaP8H9X
S9n3bcGj0MhaPB/us/6rRXtHfX+pltJPRfk+2Lo246HggWVEbcoT91fna9P/
hPZa6tDeIc/f6jB/Qn35L+mpqI/P1CFeg9+PdTR+Qvnr0t7le/eyuvQPGfcF
6xrm+7ngu7q0V1nPkreeVs/am9RT8n2O+7Xj9dhfQf3+up7ab6LIy5arPu1L
aGfD+rQX6c94+tdX+ihcXuT5sr6K19dl3JGjAf1D+jfueg1oL0L7+jQgPks/
JzivAf2hgsg3a0P6U1mRb+2GtG+ZH3A3VOfpI3RkdkP6V0Xhf39Dyq+yyLdG
I8pfxkO/NqJ9VxL+ZzYif1WF/z2N2D8S2v2wEftzVUS+3Rur8Raynv2vxuw/
gf9djWl/4N9ozHxG6ECaJsw3RV7OP7/SMu7Z3oT8y/r+e020fljI6qQ9y37W
Sk7GRxkP3nYyP5P1LCma0n5FX/byTXkeme/q0JT2L/tFQk25nsjH9k0zxnPZ
z1mmGe1f1vP82Iz4K7R/XDPiq9COxM01/bhLNmc/UM7va9tc8ZsI/b/Rzalf
oS1rmtO+JX/xFm+h5NlO6ECbFrQXsdfIHy2Y76D/t7oFvwe+XfxKAx9atSQe
ybj195ZKPsNk3LGyJfFAaPe5lvR39C8/t1T2Gyv+ZB/eiv6H/OefVob2vut0
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
c/wfDGz0OA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.35*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"2004\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"2012\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3281904000, 3.281904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3281904000, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.281904*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox["\"VIX Index\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065838595388*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.48*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"Jan\"", TraditionalForm]}, {
       NCache[3486931200, 3.4869312*^9], 
       FormBox["\"Jul\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"Jan\"", TraditionalForm]}, {
       NCache[3518467200, 3.5184672*^9], 
       FormBox["\"Jul\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"Jan\"", TraditionalForm]}, {
       NCache[3476390400, 3.4763904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3481660800, 3.4816608*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3492288000, 3.492288*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3497558400, 3.4975584*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3507926400, 3.5079264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3513196800, 3.5131968*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"\"", TraditionalForm]}}, {{
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3486931200, 3.4869312*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3502828800, 3.5028288*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3518467200, 3.5184672*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3534364800, 3.5343648*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3476390400, 3.4763904*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3481660800, 3.4816608*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3492288000, 3.492288*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3497558400, 3.4975584*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3507926400, 3.5079264*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3513196800, 3.5131968*^9], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->NCache[{{{3471292800, 
       GrayLevel[0.8]}, {3486931200, 
       GrayLevel[0.8]}, {3502828800, 
       GrayLevel[0.8]}, {3518467200, 
       GrayLevel[0.8]}, {3534364800, 
       GrayLevel[0.8]}}, None}, {{{3.4712928*^9, 
       GrayLevel[0.8]}, {3.4869312*^9, 
       GrayLevel[0.8]}, {3.5028288*^9, 
       GrayLevel[0.8]}, {3.5184672*^9, 
       GrayLevel[0.8]}, {3.5343648*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox[
   "\"Recent Log[Log[hi/lo]] Volatility Index\\nTue 18 Oct 2011\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065838692924*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0n1IE3EYB/A5m6Y5naKYlKQ1F4rFCFOsOXezlomVpmKl+BKWhJqvTLQX
pXypTNkf5VIzp46yydA5GypYJ6WhqPkWgcu4TEqPlheNUJTsuceD4/hwv+f7
e+65n+/l3PNXuBwORwI3+4RLJjhOE3L+wl+zvTsJzjsG1p5LGgk0OLPWZICr
v2c1KxNcWU/VgZ2LTUFMtoB1Gl9CE5MdHE+/LD5rVQiYNN/7ciMWTaaDa4P0
bcIRzGNqwBNjrYcmXXey9jGBCfeA5/2pDqy7g8JowsU036NU8lhTKeD2goX8
TT871oL74FBPdUZ5MdbLjOA74VHmbq499r8Abqz0mJfqsD9OspQmurhhwysm
3F9cBc5Md2iIu+iC/XeDy0SNM3IJWjUPnr5AqTsXMY/cEU4TDX9yUhSFTqxj
7oIf71+dI3sxr1wP3tx4k82T7ML+P4G1KdrYGj3mUTYymrC8sN6SOmG9IBC8
KI38YbTg92p0YO8C5jX1Gd9PzYGpJl59ZBjWc7bAfadvTgYcxu8R+xM0Me4u
ZMoY3D8tDjx9xFCifoT1Pptgu5xqcTKx3a9IThPmTOtPRRe6PAasSEx9WCTC
vO5SsIQT4PyhCfuXrYPbqcw6aSDm5x2IoImjl5be7SnF9Zoz4JdJ1pFif1w/
VQwOSVi1tcnfnncbeDe1VZNzDc+LyucETcRrZnvbSjCPjAIboxVrv5/geqYI
PB1knJB7YZ5PC9jSKloxWPH/xoyChQNLUf5uuJ46dZImePlKky55e54F4AW9
pce7Hy17Ck6crRh6FoLOGwH/q0y8/eA95msY9n3JhjC5Cs+nOFdBE/l2GQZt
myPOswGcNtNX+KoT91e9Bev2RSwP/sI80gIO/Opbdt0W6xnPU3D+lsUHP/Kw
v/J68Nlatd5uYPs8kGBpR2WoS5Yb9k+Dm6+m5rbE4/8VeETSxNq3YFMOH+cl
CwfvDS4d9tJi3tQgODq4Ylw/hPPjLINHxcYx7roj+R8Prnfi
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.521*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3521145600, 3.5211456*^9], 
       FormBox["\"Aug\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"Sep\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3526416000, 3.526416*^9], 
       FormBox["\"Oct\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3522355200, 3.5223552*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3525033600, 3.5250336*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3527625600, 3.5276256*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, {{
       NCache[3521145600, 3.5211456*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3526416000, 3.526416*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3522355200, 3.5223552*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3525033600, 3.5250336*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3527625600, 3.5276256*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}}},
  GridLines->NCache[{{{3521145600, 
       GrayLevel[0.8]}, {3523824000, 
       GrayLevel[0.8]}, {3526416000, 
       GrayLevel[0.8]}}, None}, {{{3.5211456*^9, 
       GrayLevel[0.8]}, {3.523824*^9, 
       GrayLevel[0.8]}, {3.526416*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox[
   "\"Recent Log[Log[hi/lo]] Volatility Index\\nTue 18 Oct 2011\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.528065838772923*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl0n1IE3EYB/A5m6Y5naKYlKQ1F4rFCFOsOXezlomVpmKl+BKWhJqvTLQX
pXypTNkf5VIzp46yydA5GypYJ6WhqPkWgcu4TEqPlheNUJTsuceD4/hwv+f7
e+65n+/l3PNXuBwORwI3+4RLJjhOE3L+wl+zvTsJzjsG1p5LGgk0OLPWZICr
v2c1KxNcWU/VgZ2LTUFMtoB1Gl9CE5MdHE+/LD5rVQiYNN/7ciMWTaaDa4P0
bcIRzGNqwBNjrYcmXXey9jGBCfeA5/2pDqy7g8JowsU036NU8lhTKeD2goX8
TT871oL74FBPdUZ5MdbLjOA74VHmbq499r8Abqz0mJfqsD9OspQmurhhwysm
3F9cBc5Md2iIu+iC/XeDy0SNM3IJWjUPnr5AqTsXMY/cEU4TDX9yUhSFTqxj
7oIf71+dI3sxr1wP3tx4k82T7ML+P4G1KdrYGj3mUTYymrC8sN6SOmG9IBC8
KI38YbTg92p0YO8C5jX1Gd9PzYGpJl59ZBjWc7bAfadvTgYcxu8R+xM0Me4u
ZMoY3D8tDjx9xFCifoT1Pptgu5xqcTKx3a9IThPmTOtPRRe6PAasSEx9WCTC
vO5SsIQT4PyhCfuXrYPbqcw6aSDm5x2IoImjl5be7SnF9Zoz4JdJ1pFif1w/
VQwOSVi1tcnfnncbeDe1VZNzDc+LyucETcRrZnvbSjCPjAIboxVrv5/geqYI
PB1knJB7YZ5PC9jSKloxWPH/xoyChQNLUf5uuJ46dZImePlKky55e54F4AW9
pce7Hy17Ck6crRh6FoLOGwH/q0y8/eA95msY9n3JhjC5Cs+nOFdBE/l2GQZt
myPOswGcNtNX+KoT91e9Bev2RSwP/sI80gIO/Opbdt0W6xnPU3D+lsUHP/Kw
v/J68Nlatd5uYPs8kGBpR2WoS5Yb9k+Dm6+m5rbE4/8VeETSxNq3YFMOH+cl
CwfvDS4d9tJi3tQgODq4Ylw/hPPjLINHxcYx7roj+R8Prnfi
      "]]}}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], Thickness[Large], 
     LineBox[CompressedData["
1:eJwVznkwnHccx3HEIH2OJbt0TRzBsq4mjKBZ18O6myWVGiVNBdlJV0NG4wiR
DtLEMAniqkldI5KRYgfRZSLq27gyOqnmQmXCRGkp4zYkiP6+fzzzzGven+8z
j1nshTC5hpqamow8+GbkmhDj/p83txQhvHyMgmKp+uNYYogQ2Q8RC80/9MZh
h2UvQwkF5pObg3LsRXnnOohdIueHFWjHLtWaGwVnZM8nk9DJJuHnPSlod67d
y0a/n751WkrBKS13rzr8ntZ3FCejoM4tyG4Wu0FTqzKWAjOlWYqNB7GkClpT
KUiwNElTEHMC/ucn8iloc1ieUaL/bSitqKHgSPrNtiXcP93gUh5QcDdcbcHZ
k3RlbO32EwpmXX58k0EM0i+yjScoiAt/Z9+FXtgZerFCwai245yaF3Fh/6CT
Ng1XN532+aD9/D6xPkjDznzUq2xirjVI0HmYhsTkCMEgdoNE5YqUBqHEtFWb
w/ug1p4IGrpKHj2UEXMafudcE2iwW72SWYzdpr86OIeGFzc/qnyOXb7juVpG
Q3L3eWuhN/Htk8XSRhpktrcPRBLDVEyITQ8NpnZVihq0qKi78yUNvzr0XZrG
vZFU+fccDWUXVTMiH2Jxs/adXRrkwd/3xBODnauA5jOQ8LXeZiN230t5+8UM
+KQ9+WcereeZVSdhQFcULnWUkv2Yhe1MKAMGbPNuEjH3ANwfxTGgf2Nc1Ik9
94qGRzoDb1l7zV3sej1BkQUMzPwR6O3hS7qy493+OgamzN3mc4g5vz+/OtvB
wMftW6u92JdqrE/+zoBh8HjbPj/SQ9dT3kwwIEi+NRlIDA3fpOqtMxDwmh+f
h12/dPIvbRYujnwbM4zOnNz+zJiFEbZQpetP9htvs8IcWdA+PtJ7gpizVOSu
+7LgaLzmUY4O0fXmolgosXutP4r7/MS4Q4ksLD6tiDIOIIaFT3++yoJBSkZE
LLppqXC4goXUSHFbHbrxfmheEwvDz+6nzxJz9VcfL/zGQnTuZrVNIHGLoHr6
FQvd3opMBTEk2W6nzbEgKGoZUKLtz1C/fGDhzsHexCX09vEfrh/gwUBCWuEy
3ouiNSaJZ3vsWlbQsqQsVz4P7M+Wrqyhq8syZ4lVTfLkLbT3RHKwPg+GPHQy
1IPI965fkLNCHqxEy67x0XrF/uXGPBC0qd8ToCX1fYvELpqqAX1iLk7lE2DC
g4wGEx0hun3cc4tYc2Up3wgdYeEadYgHwpziIku8r2wXm1jwQPLSv9UKe//A
3VTi01bbz8ToxTGLYeK6oTi+Le69dk2zROT/+c7lh9FTfsIpSx6EyOdUR3BP
fVkuseJBUkfVqAP6aLyghFh1SsvQCX2tQNdXzIOx5ofHjuJ9c21BJfH7vcQo
Z/RIG71BbBRmcdkF93t9+TJrHnjVj/7kil08qnOP+H9zOj9A
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{3.521*^9, 0},
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3521145600, 3.5211456*^9], 
       FormBox["\"Aug\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"Sep\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3526416000, 3.526416*^9], 
       FormBox["\"Oct\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3522355200, 3.5223552*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3525033600, 3.5250336*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3527625600, 3.5276256*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, {{
       NCache[3521145600, 3.5211456*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3523824000, 3.523824*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3526416000, 3.526416*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3522355200, 3.5223552*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3525033600, 3.5250336*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3527625600, 3.5276256*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}}},
  GridLines->NCache[{{{3521145600, 
       GrayLevel[0.8]}, {3523824000, 
       GrayLevel[0.8]}, {3526416000, 
       GrayLevel[0.8]}}, None}, {{{3.5211456*^9, 
       GrayLevel[0.8]}, {3.523824*^9, 
       GrayLevel[0.8]}, {3.526416*^9, 
       GrayLevel[0.8]}}, None}],
  PlotLabel->FormBox[
   "\"Recent Log[Log[hi/lo]] Volatility Index\\nTue 18 Oct 2011\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Ticks->None]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.5280658388894577`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Projected current volatility from trend: \"\>", 
   "\[InvisibleSpace]", "0.02034646796388058`"}],
  SequenceForm[
  "Projected current volatility from trend: ", 0.02034646796388058],
  Editable->False]], "Print",
 CellChangeTimes->{{3.5280658245853643`*^9, 3.52806583890735*^9}}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3 Cryptography", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.5280323843763847`*^9}, {
   3.528065928366297*^9, 3.528065944289298*^9}, {3.528066630670123*^9, 
   3.528066648331194*^9}, 3.529085541822104*^9}],

Cell[CellGroupData[{

Cell["Bob Rimmer", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, {
  3.52803237384715*^9, 3.528032403586997*^9}}],

Cell["\<\
The one - liner below puts out a stream of cryptographically secure random \
bytes.  Because the key is small relative to the modulus the first few bytes \
are a little less secure than the rest, in a real world cryptographic \
situation you would probalby be happy to use a little longer code than 140 \
characters, by lengthening the key, the first value of x in the code.\
\>", "Text",
 CellChangeTimes->{{3.5279793982432804`*^9, 3.527979457663785*^9}, {
  3.5279796549261312`*^9, 3.527979803672393*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "9274567890123987234567315"}], ";", 
  RowBox[{"B", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "=", "1"}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"p", ",", "4"}], "]"}], "<", "3"}], ",", 
        RowBox[{"p", "=", 
         RowBox[{"RandomPrime", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "^", 
             RowBox[{"(", "#", ")"}]}], ",", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"#", "+", "1"}], ")"}]}]}], "}"}], "]"}]}]}], "]"}], 
      ";", "p"}], ")"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"2", "^", "12"}]}], ";", 
  RowBox[{"m", "=", 
   RowBox[{
    RowBox[{"B", "[", "l", "]"}], "*", 
    RowBox[{"B", "[", "l", "]"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], ",", "m"}], "]"}]}], ",", "256"}], "]"}], 
    ",", 
    RowBox[{"{", "l", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.52711630099182*^9, 3.5271163457638984`*^9}, 
   3.527116408507209*^9, 3.5271176772174373`*^9}],

Cell["To see how it works save the bytes.", "Text",
 CellChangeTimes->{{3.527104048293315*^9, 3.527104065312945*^9}, {
  3.52797948323223*^9, 3.52797949471385*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"code", "=", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.5271040687449512`*^9, 3.5271040720677567`*^9}}],

Cell["Here is the modulus.", "Text",
 CellChangeTimes->{{3.527104739090125*^9, 3.5271047542065516`*^9}, {
  3.5279795023110633`*^9, 3.527979502607464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"m", "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"2.", ",", "m"}], "]"}]}], "Input",
 CellChangeTimes->{{3.527104757966158*^9, 3.527104772864184*^9}}],

Cell[BoxData["8193.297915610785`"], "Output",
 CellChangeTimes->{3.527104774970188*^9, 3.5271052623398423`*^9, 
  3.527106140610979*^9, 3.5271062857820325`*^9, 3.527116516849399*^9}]
}, Closed]],

Cell[TextData[{
 "As long as p remains on the system one can factor the modulus, so it is \
critical for user not to leave ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " running.."
}], "Text",
 CellChangeTimes->{{3.527104900668807*^9, 3.5271049620549145`*^9}, {
  3.5271062914448423`*^9, 3.527106315002883*^9}, {3.5271165804039106`*^9, 
  3.527116635088807*^9}, {3.527121543441428*^9, 3.527121563549863*^9}, {
  3.5279795253523035`*^9, 3.5279795288779097`*^9}, {3.5279799910175376`*^9, 
  3.5279799917975388`*^9}}],

Cell[BoxData[{
 RowBox[{"m", "/", "p"}], "\[IndentingNewLine]", 
 RowBox[{"m", "\[Equal]", 
  RowBox[{"%", " ", "p"}]}]}], "Input",
 CellChangeTimes->{{3.527104965611721*^9, 3.527105054968678*^9}, {
  3.527116564179882*^9, 3.52711660273435*^9}, {3.529085802995563*^9, 
  3.52908580350393*^9}}],

Cell[" Encrypt a text message", "Text",
 CellChangeTimes->{{3.527105297861105*^9, 3.5271053256447535`*^9}, {
   3.527105369274029*^9, 3.5271054036096888`*^9}, {3.5271065853553567`*^9, 
   3.5271065864005585`*^9}, {3.5271166657896605`*^9, 3.527116681920089*^9}, 
   3.5271184010275087`*^9, {3.527979539829129*^9, 3.527979546490341*^9}}],

Cell[BoxData[
 RowBox[{"text", "=", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Text\>\"", ",", "\"\<DeclarationOfIndependence\>\""}], 
      "}"}], "]"}], ",", "4096"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.527098823277525*^9, 3.527098896207653*^9}, {
  3.527099590259672*^9, 3.5270996235969305`*^9}}],

Cell[BoxData[
 RowBox[{"message", "=", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{"BitXor", "[", 
    RowBox[{
     RowBox[{"ToCharacterCode", "[", "text", "]"}], ",", "code"}], "]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"ToCharacterCode", "[", "message", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.527122194820572*^9, 3.5271222116686015`*^9}}],

Cell[BoxData[
 RowBox[{"modulus", "=", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"m", ",", "256"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5271054659005985`*^9, 3.527105522138697*^9}}],

Cell["Recover the message with the key and the modulus.", "Text",
 CellChangeTimes->{{3.527105747746293*^9, 3.52710576846313*^9}, {
   3.5271063569981565`*^9, 3.5271064750099635`*^9}, {3.5271065092988234`*^9, 
   3.5271065170832376`*^9}, {3.5271170982848206`*^9, 3.527117280773941*^9}, {
   3.527117326747222*^9, 3.5271173330808325`*^9}, {3.527118539103351*^9, 
   3.527118714478859*^9}, {3.5271188807907515`*^9, 3.527118882943555*^9}, {
   3.5271199251813855`*^9, 3.5271201591349964`*^9}, {3.5271207250259905`*^9, 
   3.527120871135847*^9}, 3.5271210183065057`*^9, {3.527122063405941*^9, 
   3.5271221020160093`*^9}, 3.52712226188509*^9, {3.527122676877019*^9, 
   3.527122699809059*^9}, {3.527979607517648*^9, 3.527979619326869*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "9274567890123987234567315"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FromCharacterCode", "[", 
  RowBox[{"BitXor", "[", 
   RowBox[{
    RowBox[{"ToCharacterCode", "[", "message", "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"PowerMod", "[", 
          RowBox[{"x", ",", "2", ",", 
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"ToCharacterCode", "[", "modulus", "]"}], ",", "256"}], 
            "]"}]}], "]"}]}], ",", "256"}], "]"}], ",", 
      RowBox[{"{", "4096", "}"}]}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.527105789710367*^9, 3.5271058127048073`*^9}, 
   3.5271059272738066`*^9, 3.527106185639057*^9, 3.5271167744438515`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4 Cell nucleus(?) detection", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.5280323851042767`*^9}, {
   3.528066892421135*^9, 3.528066922675015*^9}, 3.529085554670042*^9}],

Cell[CellGroupData[{

Cell["Ronald T. Kurnik", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.528032405617833*^9, 3.5280668460407047`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9u3eUZGl1J6iz+8/sXzNH7HD2SAIhu5JmhXa0I83Ijc6OkBBiEEhaQGJA
AgbbiGYbetSYhm7opr2pdtVVXb4qvTfhMiMiw2R4H/Hiee+9C5emsir3vupz
9pxb77yKiIy87373/sx7X/7SF7/1t1/5n37mZ37mO/8KDn/7hcf+729/+wvf
+7t/A//55MPf+fpXH/7ylz7y8KNf/uqXv/2fvvg/w4ufg39/DP+ic1yUaFUf
shIpGBirm+EZo/iiObG8E8eZ6YprqB6EyOkircqcKtGyxigQAi2SGItgbHvI
dQhpKJqc56GKyFmWbLuK6YaTE8cNz+6dT+/edcdjIwycycyeHunBkRkce7Nz
0Z4K1ozXR6PZuenO/NGJZQeuN/LHo3A6s8PQsAPDnjj2icB6shR0MabSHe5X
e5JuS7ZBSiItWUNallxTDSxWNyjZYtWAUULZntGyx+meZI+0YISLMinKtKxi
PMfpGm/ACYMLbJ9CCZWmdVYLTSvwwqMjSDgcHU3GJ5PRkWW48F9/PDPc0PCn
zvTUDGaa76m2zWqq7o+s0VT3JvC65k/0cGRNptZoonmBbHve9K5i+pTstDnt
oMfk+qyg2owkkDzPyC6E5juab0FKUHZKtCnBkcyx4Z9IZigagWg6nGZCmQXD
4jSDVXVKliB5jBMQhiZkHgJyEFRTMz3DCHz3OPRPHXusqa7ljvzRkebCt02t
6V2otj85dvyZZoeqORLVAMIMTq3wrulNLH9quGPdGUGdx7NzXR9TnNkVjBIm
5Pq0oLuirvOKzouepMCPW4ZjS6oFH2Z5m+EsmjUVbURzqgCVlwxONglW5BUD
KsCqBsaJQ4bvoHQLIVFWYET4KsuwZrZ9NArPR8F9CNMcW9YkGB+PZ3ehvBD2
7AxyDqfnpn2s6hNBCnlpbNhntncPYjI7D0b3be/Icmeue3J8dG6bR7zs93it
RovZHqa5U81xNMuFnBU5lCRF13VDd6fj+4oSQPC8CcGJhuVODHsEmUPaEIYz
VYxQUFyIASkPCZkRTFUfwwW6/pmhH3nuPVUN4RtkzdWt0BvPnHAi2q7keIo/
hk6Llk8bqfaJqE9l88QZnRveKUQASY5Oof6aOVKNcAT5W8eaNR3KWk9Rs90+
9ICgaarpCJKvqWPIWZZlRTY954jnbQF6Q3I4zoBawUhC8TnR0q0xHGV9pJoT
wzmGYAQHLpnhDV0PZdmH4rx7hN8IVwojY7iBNQ70wBUtEyZUC0LoW9EKJXvi
HZ8bozPeHMvukfKgbbRwrPih7HqyC2jgQP6Gf+Qd3Rc8n3XdEoLRsNyKolou
NAaEKCmcwIuSrqo+9AY0BhxJWhdlHyMUglYgMTiHVzjBNawjP4T1PWV5j2Yt
kpRF0YRrDIJTuK5gfGYHs/Hxffhyyx8BDlhBYHqhE06D6Ul4fB/ShoJHvT06
5p2R4I6V0dg6PpFHPoQ6CfXpVPYCY3yihUfByTl8XnbCJkaxiiUZGnybYoxZ
0eEkkeJpUTUE2RGNkQCdLLokb8NbGKVC8LL3bpMznK2bM9s9k9UJz3kUqZOk
yrI6vGs5x7AKsJq85kHvQa2g+VXLg+WGssO7tnsSdSw0gDuWrZEVnhjhsepN
jXEUchgKnif6vjaBnAGsTgAVrdE9RQ9Exe1iHCycqKtQBM2CnC04J3laUA2S
1QjBFowpKXq0HHDQ29YM8mckj2RNmrcRVMIIlcD1ISLTlEXgKk6qQ0waDAVo
MwE+b0xUZ+bPzhV7DPFuI0GrW/Y9Uz9z7XNoHtc9gvxnx+f++EzSfNUbQyXN
8RR6XrB9qL8enjqzc8M/B/RQJFfgTAQXAJdkzQbIY3gF4IKXdEV3AG1o3iAE
F+e8Lq3XUbHHmZjiD+BFycEEq4lwrQFXaRHVLgXnuGjjnEFzOjbkoUMoSsNp
Ha4LwBOgEoDXCo9kw4EA4rC9KbQ9TNb0+Nzxz2H6NOfMDO8DEXBGKLmh6ofw
vg5HJzg6izDEsmamOVU1SxBllGIFUdUNR9Nt3XBVzcYpkaAl9QEgELxOSmaP
kiGahNjn9GKHqvbZcoettNkuqtY6XL6KQ/QJA2ftASYiqEhQ2mAo9oYCK7oA
uYLiA8y6o2PbAzQL/GDqulPLDIPgzAnuwtqxss+rEXNBSIDe4yOoszmeSLYl
myb0fxDOPH8yGd8FloQQFVNVVUXRFNlQVDh3KWgJSuckDwrVp/guwVZ7aLE5
zFR6hQaZzPczJXyvgCUOkEyRSGQGiXQ3vt/JlfB8Bas2yGaXRjC13eM7fYnh
gSZC6H9J9VTDN0wXimManmX6pubrmveACmeAHgJwSsTjE94cQdqKOzJDGDfb
cFzVNEKg8nA8GR8bWmibM14yTdsCeJNkVVB0AFKYNYK2UNpu9sUWytX6VK1D
HZSG2SKaLRIQxQqfzOLbyf5Wqr0Wq8fSbYi9XDuZbeYqGESjKzV7crsnI5hJ
UAA7Dqysoni65kC2NvC6O/bsCeSsOiNgFsA3SFjxgLXv69Dto3vQTvAWsLzt
jyDt0Xg6Gk18bxJ4Z9PRObCVYlmiZkJXU7yK01pryJeadKnN5Wt0vkoVq3Sj
JTeqUi6NZRNoYrufig+3t9u7sR4UeXe/nch1drP1dKmdqw6KdbJQIWttsdES
qzW23RQHfZkmzMC7G5UIsAmUhh1CeN7MdMYm9Pb0vhGeyvaxYt/V3GjWnPG5
5pzK1kS3AdhdaCdoqsn0FPDTMo98D1h1Ciys6B4rmF2EafWYepc9rJP5Krlf
GCayeLbAFfJ8NcuvXssvX8pcf2Hz1oXY2p381lp1J9mGUieKg51cN1keZGrY
YY2u1JlWW6qUqFwWrZe5QVsmEN1QxoYy8r3ZKDwBQtTMwPaPIYxw5kzP7Mk9
I7gLFVacE8mYKdax7h1HOTsjyBk+BpIPxjAK/57v341mTXBUOSAw5TDfL+Z6
jToNUa4Q2TyynydSGbyYpROLtWs/XXz90UuvPXLxze9dvfXS+rULG++8Hbt6
M72ZRncL9G6ZTZWYXIko5IbVQ6qQQRJbjf3tVi7ZqeaGOKKILHTIBCSE6R47
43vAfdb4jDdcxfEBoqGxHRgxQGl/ao+OjQBk3sQMx9DVIOqA4uEqgsk5SFYv
BOS3ZD4g+nLzkNhZya3cTm4tp2PruXSydpDtJrPI+najnCMX3ti+9uSNH/3D
D17+2gsvfe2lH3/tue9/46XHvv36D568+c58eT6Or+WEnYKQzRHJWD2b6h4k
Ohvz+ZsXt6+/ubZ2J5XPtLttGgCQ5i3ZmYZ3z53Tc96ZOJMjZzQCtQP9qbuu
4XnOKJjePfGPx5N7x8505B8fudNjENvwU+PT8+D4rj85go8BBQ+bTCvWyr8d
z7+eiL20GXsnO3cjmykyyUwvk24f7rfjN3cvP37h8mPPvfTV7z771Ucf+9zX
Hvn8Q1/9p4ee+vErb11Z3i8gq7uV1AFWaijlAzYzV1n40a3b/3zhtb//wTtf
enrzx9eLN9O9RF/qGSLu++65bJ1Zx+fK6B5UFdSpG0RHQG7LC///IxgGOIEY
TU+9cAaQfgTCyR577hSGFziL6gr5xezOT+euP/TK/GNX7jxxZ/mdvWwKi6WQ
XIHa222n1ysrb6zfeu76wgs3bzz3zk8fffrhr/yPr37l0e898eqt5czmfm89
2dtODbeT3dweEruceuebrzz/iUde+Kt/fvXTj1775rPZK7vljWI7P2BQFaQj
qErVizQPgDZ4mXc1qhOMwRFAqnAEuBjNTuBaTAdyPpsc3Q/Gp+PZPdcbQ4Dm
BD3GD5TGRnn1R9dufOPVy199YelHtzcvJmr79HYMTeyza+ut2GZ3c660fDW1
cDV+58rO22+tvPTKnVffXrm1VkxW2OXkYDUxWE8g23udbKqzdXH7xiOvvPCx
h1/4yNdf+dQjNx99MXZ57WArVzposLTG87os26DJgFwAENwHR6jkuxXWbQ+O
kPP46NQBBaU7bnAEOfuju6Cl4RXIGUCeIk20QZfWipm3tua/+/b84+/cevxa
7MpeYQfJ5cT9AzmZYZJJcj9NFgvC2kZ1bas+v3q4tFuf26rFD9n1PeT2en1h
s7OTJrYzvWSqvXs1sfDDK29//sm3P/s4FHnt+Rs7c/FSsVtr4aRgAaJqgMyK
qWs2pP1g3UEBAoyM3u2H6PjA0UCRgfIAZCBtE7S6HsBIAptDzoO+2KlhlVS9
ulnev55M39rffieRXa8exAc7u/3dFLGTRJc3Wqtb7USamFst31kp3VotrcTa
11eKu1kMzhfWq4tr9fVYbxmgLzPMbjXWL2yuPXVn+6cLsYs7m9fi+8lGucVU
Eb5DaUNWA2ugKKAWHMhHtYIIhN0xqD4gkXePEKY3gvTACIMUfNdkKXZoT05A
QYHUb3e5WhWtFPuZeLmc6aZjldx+L7vXS6UGsf1BqanGDvCNVH9+s7a43ViK
tW6uleY2qpDz2i4wILqyVVvdrsMRMl9JDbZT6MEenl5pFVdaucV6fruT3G6m
C3iuwZX6Ups0Kcl/IGidyA54MHpHYAad4AQSA2EGOUOqcHyQrQ+Zv5s8HEFl
WdMTIHrws80+OyAUYJNmm6rWiUabKxwS9aaQyiJb6e5ehVzP9Deyg/l4aynV
3chg89vN5Xh3aae9lURWtts3FwtQ/JWd+ka8u5YaLG+1d7Z7B0mikML3dwep
1BCIPlWkszUQgdIANVjBBxEF1gzKK+tjURmDttHtKPN3iQ9SiuSxZmm2Zwdj
MAsgk6ITUIajE9oIQecDWXdxCSHVapfp4TpIi3yZzBWInVTvlWtbz1xeefl2
/K2V7KX14noOn0t0bm02Li8WL9/OzW8013Z7t1YrK7HunZ06XMh6crAVRyDn
/SSW2O0dHFB7eSqRJ9OHVLkpA5u36hyKiAylQqOC3wfhBzoKrsJ0ADfuAmsA
kgBAg5aA0B0/SjUIQNtHMB6MWHsCehhkeZ90EG502FVzTbnQVHKHzMEBUc7j
l19d+uE3n3v4Cz/84he//+gP3nr5SvzaUmlhtb48X7l9JXP70v7NK3vXb6Sv
zxdubdYXEr2FWH8zha/tDNfiAyDH9exwq4DGyvhuEc00uX2oQ4NrDPQuYbLa
EQniMzihTAdXDRpcsDzSjVPXuW8ax5oB1bbMka+EljF29cDXLT8M7zreKa64
rDMeijopTuqYWexr2ZacbylQEKCz3c3KT3/wxpc+/Y2/+MO//rMP/f2n/vE7
L1zeur1Rm1uuXr+WvXk5/faFnTfe2Lx8LXVtuXB7uwb1n99tb6bQ9Z0Iqzf3
BouJ+nKquZnrQkCDZar0YUdooVpzKINlQHlDsENUVSFnVg9AZpjOPc8/B6dm
WDPRtO0J+ERfDRxQ0dDYbnBieSeCO6OtEJPNPmV3GbdJ+ZmmsFdmSy05W6BW
Vw+ffuKtv/vLT338w3/7B3/04a898uQTL127uXI4v1JbWqzfvpp/+7X4G2/u
XL11cH29dHunPp9sLyU766kOzCOgdCzTX4rXVlPNeBGFOGhyUORih2tjKsKo
gulFN880HVMUxnJF0EJQW2OiWydgIUXVA/+ouI7i2wIYkdCb3b0/OroLYklw
p6hk9TmlgUjVoVrF7FxPyXe1OurWumYs0X3lxZuPfutfvvDZz3/p69965Ac/
feny8txm+eZ8cWW5PnenfON6/trt3I3l0rX10s2d2uJedzU92IDjbmM3PUjm
sI1Ee2e/ny5z+yX2sKtD7xXbYhvTMd4AiAADAmafBnMfjLRwCrQIztH0oaXv
OeHRA9BzIVvVs90xkOR9GENBdzk7JFQXFRSENtqUdThQ0y1hvy6kq3y1YxzW
xaXVg9cuXHz1wpvPvfrW69dX7mzl35lPr213llfqy0uNxcX6rZXqtdXKtfXK
nXgbEl7Z623nyM294W6WSB5Q24khAHv8gN7NkIWWURk4pZ7WQHWYd06yJc2U
dYPTDGM0huGS7AA0nqD7qjOBOoMtBYv6LpWDIgL5JOqgMgJM0WnD6zMCzppN
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
9IQCF3kxCMJz2zoFyQQ8r6o6eDNL00VeYhkJuuKwjlc74kGFzJXpYpXeT3fX
V7Kri6nnn3vnxZeuP/XC1f/x5OtPXVy8uFZ4YSHz3EL+9fXmpa3BjQRxaxe/
szVYT+C3l2oLa63F+GApiS0lia2csJamdvJsosQddpRCg45KjbAwkkOc4SUd
sBqEMYoRIE5YWUY5GeVF0XY4wyRFBfQh+AswxbZ1rBouLyiQs2O5ge2DLKFI
EbREvScU22KhrWZqUqJI7KZ7qzvlhcX0hZevP/SVxz7x8S98+jPf/H9/8PJj
z1x5+CdXnnh794cX46+ttu6k+ZtJ8sZmfzVFQXmXdpHVfXIpRc7vYqt7zHKC
2MwwuwdMuirul/Fyh21hAkhWUKpgZkCgEjg/RCkUlDxKQjPAWOl+aI5C8DLA
9QBrYIXAdhl28GCnTWBHd0NCIFPQkD1MK7S4VJXLdY1UTdouUOt7/cWd2q25
5JsXrn/pH7768Y988uMf/cxnP/etz/zTdz7zlR/97Rcff+iJ68/fzF+L49di
2Nurrfk4thAfQsILe+R8ioTir6TYpQS9meG3smz8EL6cKXT4OioOKBV0cqdD
DHq0yJlA5ZB2vTNEaVMyo03ITjiFVYh258pGGMwm01NACTsYR49BVU0x7Ggz
v+ojjJtpcnt1KdezEmUpWeYBYBc3K3Mr+2++9c73v//4P372n77wj19+6KFH
//zDn/q9P/7rv/jE1//uSz/67ourL94uXlxpvzZfubrWubPTX4hjt6Igbmzj
i3FmfpdaS3Hr+8xugUtU2IO2kO+x5T7bHDDNNjnscRJvQc6cpAJQDEmXE0eM
4IBfBucLClyRTTCMozDa2+bNTkTTBjIH+wPdjrJGizBiZTJW5pM1BZrwoK4e
lMVUBj+s4EvbW7eXbz/1wlOPP/nEJz/13/7kTz/6O7/35x/8/Y/9l0889LXv
vf34q5sv3yq+dCP/6o3CxfnSpcXalc3B1S308ipyYw27sty7vTFc2MXW96m1
DJJusNk2k63jrQFHUwaJKnifBRWCUSRoaXABkh0o7kQfHZOyQ0a3+m0496b3
bG+qqa6iWtAVkdiTDFD+tQGTOEQKHbEy9BIl8bAXZOp2tuHEStx6vnttI3F7
buuL//TQR/7iYx/8jd/99ff/5m//+u//xz/86Mc+881/uXDrxYW9Z6/tPPfO
1os3d19fzFxaq15ab1zaal3eaF5eql+ar97cGqxkufUsv5MTKy2nWJHbqDGk
LBwRqaEALNYbcMhAcKdHqhvIViA7ISVboJkJQLVwFhzdA2kNRgbYRFYM6HMo
dY/kqj0yXuhupdvbeRxwtdB1dnI8jM9mlljONBdiuWeeef3Tf/Pffue3/v2v
vf/Xf/Hfvv9Xfv43/t0H/+RDf/OFh55+67k7iWev7F64uffKzcRbi7nLK6W3
VysXVyuX12s319sL230YyZUsu5SmdwpCvq4BP8KydjCZ4wyaksACYGQEXJrt
uaNpZKlMRzJ9hBIIXtXs6FlAtItbsUzL03RbUA1Rs0CZNId0qtTbyrTiBTxV
4nJtfSWFrKeJVEVYSjbW4qVvfuO7H/7Tv/rAe9//gX/78+/72Z9733ve/0u/
8jt/8pF/+PL3X3zxVuql64lLC4ULN/ffms+9s1S+vFSGtK9vNhd2kfUUAQmv
5Lg7aXynIu5VJRDhVVyrYTyvOTBoBC0NcQ4AEJSoE0bbaQA0IHkQz9DS0UNn
JzR0FwLoD3BD1g1RNcCi1rpottrfPxykayTQFhDucrK/mSMASbaynYW1zNf/
+yP/+Xf/8//+C7/8/p997wfe83O/8G9+7hd/8Tf/9C8//c9PXHj51t6bt7Pv
3Cm+fi371s38jcUmkOO19c6d3eHyLg6xuE+v5cX5A3a7osYrUqalFoZyi7NY
zad5g2RUMPw4rUQPO2wbgJpTlHA6ozjxwR1+xwdtbwVgB/xgYjsB5CzrFs6L
Ed33qXwN3a9giQKaKBM7BWynSG4eIDvp1psX5//733/lP/3G//Vb7/vV9//r
//X9//q9v/izv/Arv/TBD330c48+e+m5q7GLt3JvXE6/fiVz6Wbpzmrv2kL7
ymp3LkYs75B3NvE7cXolry/k5bVDNVbSDtpOui1j+gnB+zRroaiIorysRrvv
FMeL/tpLlb3RmGF58OyqZI6cmetMTCOAfgbKlmQVfAEsByhY8NeQc7oa7ZqD
Ad8t4ttFbCfXu7mS+O53f/LxP/v47/7Sv/vl9/wcJPxz/8t7fvW9v/Z//OYf
/tUnvvK9528+9ebWG9czL78Rf+Nq+up8ZWFjcHWhcWmpcWsbgZzntgjIeelA
XcprKwfydkGF6U5WRVo/p5iQpVwSEwddimI1xQ7NcKz5XrSvYzTmeJFnZIWD
XGeg6zznyHGj/QmipOmGA/aAEw1wFtnyYP8wev4eO8TWM/3VTG8z0750a+Xh
b37nv/7pX/7Br33w1977vl95z/t+9Wc/8Fs//8E/+P2Pfuqzjz7+8uLTl3bf
vJF97e3km1eS1+YK8xvN2+tNaOab2935rd6dLeR2HJtLs4s5eTkrbR+IqbyS
OuQRaiIJMw43oRXwATZESUH3jdEk2iM98v3xRFF1sLQqD9ruKPROQOBBzobp
QZE9fwLMqOgBxhjFGhE/6Mbzw908EjskNvPD5UTl9urOdx97/HN/88kP/4c/
/L1f/+3f+N9++d9/4P/87Q/8hw/9l8984WtPP/na+ks3spfnipdvZl+/HL98
c//2RmUp2VlMI7djrWurlRvrjVuxwa0UsZwXVg+AqrjYPrVfoOsdxZBP+KHC
YyQ16A2HQ5k/5TiAiHu6dyxZbrS3P/pjBN8yj0DamdqJqkyi0KPbqtFzW92i
db2MDNONdrzS2e+Qm0VkNY+upTuJ/fKli1ee+OGTX/vil/7urz/6Vx/60F/8
+Z/9P5/8hy889K3vP/P6Kzc2X7y2+/KtzHOX9l66egDM8tZy8cp27fJ65cZu
5/Zu9+paey6GLaf47by+kdWSZSteVJN5vtX3KO6I4yccaxOY3B2QmnIiyUei
MmYVK9pCpkokzxOsyAgmMLVoTmRzqtpH0ZZOZyqoJuhnTjP6JFPtoZlSd6+M
bGd6OwfYdmaQKfZ2Yvm5xa2Lb9544fnXnv3phRdeePPNS3NvXlsDIf324sGb
84VXbmQh4Veu5t6cq1xcKV/bblzdai6msJU0eWcXXUpRq2l+80CFiBXVWEHO
1dQeFtACLPc5DByGsiCTgtF9JzhT7CnoOtG2FN+GeQR+BI1HWZYynqnjmTk6
AooBWgS6B1moyAaI0h5C5QqdRKa1k2zHM1giiy/tlmPZzvZ+czNR24rX13dq
azu19VjnDlDGah2g+Npa+8KN/IXrhVevFF6/efjGndKl1fqVtcZcPNrLBAJv
MUmu7HObORhAeTsvgjottuUebhGcF47PwfJTBAsoYboz3ZvJzpgzbdHxtCAU
LJsUZVJWUFkWfV9wHJAc0eMYGEbFdCzfUm2BVYYIXSz19jLt+H4nlcf3Syxo
p8JA28gOFmKdtSSyHBssJ7DF2BA47tZGZ253sJzCr6003lmsAk1fnK9cXm5e
3ezd3OovJPDVfRrSXk2zO0UlVlJ3S9JukQfnkm9zXULHOcMAsQm58SzL0u/u
kBHMgNUDWvV4w+f06A8woQFoEYBN4ySRZrgHyt9UeNXRXUgbvMBgQNVaeK46
3CujqTKxX+c2Cr1Uk9nIY6CgMj07VlV3ivJmTtjKMRsZcicPqhVZ2G7fWqvd
2mxdXqpe3+je2EEWEsTyHr2eYaPIgqjT9xrGbkkA6Zhu8MUuj4supASe2nEs
QxFxAtHMAJhRMkNOD0jRiR5PKNFuXsO0VVV2bF2RRY5hVVkBtyKLmq5GDoti
pQ6CNxDqsI1l62ishMTLKCixXJdP1JhETYg31PUiv15gIgVYFWJ5IlYYrsSb
0W6lnQ44xKvL9RubvVvbkVVZ2SM2ssx6hoauhgonqvJ2kYlIsKdWh4C7E9Wb
AgubhuaYyhDtwXl0m9SMNsmwohv9eZTkCKKsKJIoMKoiSDInCIJuGtH2PDeA
iLZdCfKQ4VFGAvlR7VIHFSRdHCQPkcThcK/G7zfVvbaRaBpbJXa3zAJRAirG
cv1kbrh3yMUgvX12NUWvppmlPXw9Q25kKZCFiYqwVaBTdXm7zEFku2oR0duU
xepjwRgruqdpmm1pGD7QbcubBIbnKab/7i4s0/BE8H4io6iglqA/OFYUOLgE
XWc0HRclUobLsmXbjXbpcArB6J0eU2tSpTqTOECgpOtZfKvApppmoiomKvxG
tpcoIJDzQYXdgy7NiqtJPlGy42VtLUvChyHiZS7dVOJlPtvWYzVxr63lB0YZ
sxAB1OYIEyyQbYqi6JpEEJhnz6b+PUsZgcVWRAM6NnQ9kWVMVeI4RpBEMCmA
b+AZwZgzis4CdCiy5ZiGCWsAzkbGeA4GtkPy5TaRr5KpwgAc4sY+xHA9i20c
EBs5ci2Lrz24kO0iwIKwkeXAt8KUQavv1VRoDHhxuyDBu9BLoPlznegWK8LY
jBbgrMlIHstYpuyzuAxzpKm26051Pbrzr5oOtK0XgMAQHdB0uirLMgONYjiU
pAKA47xEsgIvSLBMUHtRFKOL0qI/ywXt3Se1WlfKlMhdyHavDzlvHRAwelug
tAvE9iEJsXGAr6aHaxnswQ0NZusAlKG4uo+vHzCbeW6nyEDBYZwriFLDZEIC
TAhpyZH16IZhaJ8onINhAhg9oD8lujXrgpOVHdP2Pcs3g5EfbQXRgRZVx5/Q
gsKIOkpxoGPhKuA6aBrEoAoODZhddwJGdjHO7uJWtSsV6kK2xqXLXPKQjhdI
0H7JCglDGisNd4soSBTo8K0cHImNDAaZgwIHYAEHAe7yXayoIjzKG9E2mmj3
iB/9dZs18rSpJY4EzlRdnzWASkLB9OzRcbTh3wl8EBduYBgW6CIdTEE4EWSD
EzXIPKJCUYPMBVGDbFX4ef8oCE5FBUod/dnpkLPA5w5op4OZ1a5SbPCHHaHS
lysDqdjmcy021+IPGgLo+VSJemAcmN0cvldms3WxOtCamNGjtA4ucLoDttoK
wPv70c4NJxzbxwpjIgPq/wPy9RZC
      "], {{0, 93}, {60, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{60, 93},
    PlotRange->{{0, 60}, {0, 93}}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageMultiply", "[", 
  RowBox[{
   RowBox[{"ColorNegate", "[", 
    RowBox[{"EdgeDetect", "[", 
     RowBox[{"Opening", "[", 
      RowBox[{
       RowBox[{"ChanVeseBinarize", "[", "a", "]"}], ",", 
       RowBox[{"DiskMatrix", "[", "6", "]"}]}], "]"}], "]"}], "]"}], ",", 
   "a"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5280641634115343`*^9, 3.528064170291134*^9}, {
  3.528064212099134*^9, 3.5280642265915337`*^9}, {3.528064677774734*^9, 
  3.528064715511134*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["5 White Space Data", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.5280323857455482`*^9}, {
   3.528154289512518*^9, 3.528154291879171*^9}, {3.528154358949576*^9, 
   3.528154361712487*^9}, {3.529085559518565*^9, 3.529085560190185*^9}}],

Cell[CellGroupData[{

Cell["Zdenek Buk", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.528154285866336*^9}],

Cell[TextData[{
 "The following code generates the black and white portrait of Stephen \
Wolfram. The code has exactly 125 character (counted by One-Liner counter \
tool). The result image has resolution 57x89 pixels.\nThe code demonstrates \
the flexibility of the powerful ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " language and the notebook (CDF) format \[LongDash] all the image data are \
encoded using white space characters \[OpenCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]\\t\[CloseCurlyDoubleQuote] (space and tab), which \
does not count."
}], "Text",
 CellChangeTimes->{{3.496076665668152*^9, 3.4960767205541*^9}, {
  3.496076923517693*^9, 3.496076933115058*^9}, {3.4960847435319433`*^9, 
  3.496084743698369*^9}, {3.5281378232486134`*^9, 3.528137876436902*^9}, {
  3.5281379329324913`*^9, 3.528138081630221*^9}, {3.528138160011897*^9, 
  3.528138161531817*^9}, {3.528139227016192*^9, 3.528139232216186*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectionMove", "[", 
   RowBox[{
    RowBox[{"n", "=", 
     RowBox[{"InputNotebook", "[", "]"}]}], ",", "All", ",", 
    "EvaluationCell"}], "]"}], ";", 
  RowBox[{"Image", "[", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Characters", "[", 
       RowBox[{
        RowBox[{"NotebookRead", "[", "n", "]"}], "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1", ",", "1", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\< \>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<\\t\>\"", "\[Rule]", "1"}]}], "}"}]}], ",", "57"}], 
    "]"}], "]"}], 
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t  \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t   \t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     \t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t       \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     \t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t       \t\t\t\t\t\t\t\t\t\t\t\t\t     \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t       \t\t\
\t\t\t\t\t\t\t\t\t     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t \t        \t\t\t\t\t\t\t\t\t\t     \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        \t\t\t\t\t\t\t\t\t\t     \t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t\t        \t\t\t\t\t\
\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t \t        \t\t\t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t \t\t \t        \t\t\t\t\t\t\t     \t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t       \t \t\t\t\t\t\t    \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t  \
     \t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t \t \t         \t\t\t\t\t\t \t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t         \t\t\t\t\t     \t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t \t        \t\t\t\t\
\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \
\t \t \t       \t\t\t\t\t\t \t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t \t \t \t        \t\t\t\t\t\t\t    \t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t \t        \t\t\t\t\t\t    \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t   \t             \t\
\t\t\t\t\t\t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         \t\
 \t \t       \t\t\t\t\t\t\t   \t\t\t\t\t\t\t\t    \t \t\t\t\t\t\t\t\t\t\t\t   \
            \t      \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t         \t\t\t\t\t\t\t\t\t\
                      \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t          \t\t\t\t\t\t\
\t   \t\t\t\t\t\t       \t       \t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t \t\t\t\t\t   \t\t\t\t\t \t               \t\t\t\t\t\t\t\t\t\t \t\t\t\t\
\t\t\t\t \t    \t\t\t\t\t\t\t                  \t      \t\t\t\t\t\t\t\t\t\t\t \
\t\t\t\t\t         \t\t\t\t\t      \t           \t       \t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t   \t    \t \t\t\t      \t\t             \t   \t  \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t \t  \t\t\t\t\t \t\t\t\t\t\t      \t \t \t         \t     \t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t \t \t\t\t\t\t\t      \t            \t   \
  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \t\t \t \
\t \t \t \t    \t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t    \t\t\t\t\t \t \t \t   \t \t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t \t \t\t\t\t\t\t \t \t   \t    \t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t  \t \t\t\t\t\t\t\t\t\
 \t   \t \t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t    \t\t\t\t\t\t\t\t\t\t \t   \t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t    \t\t\t\t\t\t\t \t    \t    \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t      \t\t\t\t\t\t\t \t \t \
\t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \
\t \t  \t\t\t\t\t \t     \t   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t       \t\t\t\t\t \t \t  \t \t \t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t       \t\t\t\t \t      \t \t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t        \t\t\t\
\t \t      \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t      \t \t \t \t \t     \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \t \t \t\t       \t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t \t   \t \t\t     \t \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
 \t      \t\t \t    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t \t \t \t           \t \t       \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t \t    \t         \t\t\t\t     \t \t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t      \t\t\t\t      \t \t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \
\t  \t \t \t    \t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t \t \t     \t \t      \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t   \t  \t          \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t    \t \t \t       \
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t \t               \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t              \t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t                \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t             \
   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
 \t                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\
\t\t\t\t\t\t\t\t \t                 \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t  \t\t\t\t\t\t\t\t\t\t\t \t                   \t\t\t\t\t\t\t \t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t \t    \t                   \t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t \t                       \t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t\t\t\t\t\t                    \
  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t   \
       \t \t \t \t \t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \
\t\t\t\t\t\t\t\t\t       \t          \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t \t \t\t\t\t\t\t\t\t\t\t \t \t  \t \t \t \t \t \t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t \t\t\t\t\t\t\t \t\t \t \t      \
\t \t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t \t\t\t\t\
\t\t\t\t\t\t\t\t \t\t\t \t \t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t \t \t \t\t\t\t\t\t\t\t\t\t\t\t \t \t \t \t\t\t \t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t \t \t\t\t\t\t\t\t\t\t \t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\
\t\t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t \t\t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t \t \
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t \t\t\t \t \t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t  \t \t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t \t\t    \t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t   \t \t\t\t\t\t\t\t\t\t\t\t \t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \
\t \t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\
\t\t\t\t\t\t"}]], "Input",
 CellChangeTimes->{{3.528137129588964*^9, 3.5281371540150957`*^9}, {
  3.52813725264177*^9, 3.528137466822126*^9}, {3.5281375328558893`*^9, 
  3.528137562212288*^9}, {3.528137881100013*^9, 3.52813789652238*^9}, {
  3.528139214247813*^9, 3.528139215102579*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["6 Psycho Pie Chart", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032387607485*^9}, 
   3.52815447436768*^9}],

Cell[CellGroupData[{

Cell["Susan B. Garavaglia", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.528154480691918*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "=", "\"\<ColorList\>\""}], ";", 
     RowBox[{"PieChart", "[", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"x", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"ColorData", "[", 
               RowBox[{"z", ",", "j"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         "3", ",", "1"}], "]"}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", " ", 
        RowBox[{"ColorData", "[", 
         RowBox[{"z", ",", "j"}], "]"}]}], ",", 
       RowBox[{"SectorSpacing", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"z", "/", "124"}], ",", "0"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "1", ",", "62", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["7 Recursive Image Collage", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032388696059*^9}, 
   3.528154574992979*^9}],

Cell[CellGroupData[{

Cell["Zdenek Buk", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.52815458228822*^9}],

Cell["\<\
This code creates recursive image collage. It takes the image from example \
data, resize it to some reasonable size (in the code 50 pixel - the oragne \
parameter). Each pixel is then replaced by the lighter or darker image image \
itself and assembled together.\
\>", "Text",
 CellChangeTimes->{{3.5281432765464487`*^9, 3.528143397052943*^9}, {
  3.52814356152017*^9, 3.528143581478922*^9}}],

Cell[BoxData[
 RowBox[{"ImageAssemble", "[", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Rescale", "[", 
      RowBox[{"ImageData", "[", 
       RowBox[{"i", "=", 
        RowBox[{"Nest", "[", 
         RowBox[{"Darker", ",", 
          RowBox[{"ImageResize", "[", 
           RowBox[{
            RowBox[{"ExampleData", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<TestImage\>\"", ",", "\"\<Elaine\>\""}], "}"}], 
             "]"}], ",", 
            StyleBox["50",
             FontColor->RGBColor[1, 0.5, 0]]}], "]"}], ",", "3"}], "]"}]}], 
       "]"}], "]"}], "9"}], "]"}], "/.", 
   RowBox[{"n_Integer", "\[RuleDelayed]", 
    RowBox[{"Nest", "[", 
     RowBox[{"Lighter", ",", "i", ",", "n"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.528140243063499*^9, 3.528140266359119*^9}, {
   3.5281403225189333`*^9, 3.528140329973135*^9}, 3.5281403839489326`*^9, {
   3.5281406567063217`*^9, 3.528140726090438*^9}, {3.52814106302831*^9, 
   3.5281410661770267`*^9}, {3.528141182006863*^9, 3.528141182228723*^9}, {
   3.528141271778214*^9, 3.528141388567363*^9}, {3.528141425024022*^9, 
   3.528141425158578*^9}, {3.528141488510564*^9, 3.528141503208147*^9}, {
   3.528141670397141*^9, 3.528141771196582*^9}, {3.5281418781682034`*^9, 
   3.5281418795509043`*^9}, {3.528142429519989*^9, 3.5281424756119967`*^9}, {
   3.528142518390135*^9, 3.5281425238830023`*^9}, {3.52814256274833*^9, 
   3.5281425719639807`*^9}, {3.528142615573822*^9, 3.52814265088132*^9}, {
   3.5281427445676107`*^9, 3.5281429616060343`*^9}, {3.52814302311675*^9, 
   3.5281430510992928`*^9}, {3.5281431228731956`*^9, 3.5281431259850883`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["8 The music of \[Pi]", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.5280323897607813`*^9}, 
   3.528154678217266*^9}],

Cell[CellGroupData[{

Cell["Chuck Ronco", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.528154687455117*^9}],

Cell["\<\
This code plays a piece of music which is made by assigning a musical note to \
the first 51 digits of \[Pi].\
\>", "Text",
 CellChangeTimes->{
  3.52814604153125*^9, {3.528146621859375*^9, 3.528146730546875*^9}}],

Cell[BoxData[
 RowBox[{"Sound", "[", 
  RowBox[{
   RowBox[{"SoundNote", "@@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RealDigits", "[", 
           RowBox[{"N", "[", 
            RowBox[{"Pi", ",", "51"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "i"}], "]"}], "]"}], "}"}], ",", ".46", ",", 
        "\"\<NewAge\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "51"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"ArrayRules", "[", 
    RowBox[{"ToString", "/@", 
     RowBox[{"{", 
      RowBox[{
      "C", ",", "D", ",", "E", ",", "F5", ",", "G", ",", "A1", ",", "B3", ",",
        "C5", ",", "D5", ",", "C3"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5281459255625*^9, 3.528145935734375*^9}, {
   3.528146490734375*^9, 3.528146491953125*^9}, {3.5281465283125*^9, 
   3.528146529265625*^9}, {3.528146875890625*^9, 3.528146880046875*^9}, {
   3.528146932515625*^9, 3.528146936640625*^9}, {3.528146967453125*^9, 
   3.5281469690625*^9}, {3.52814701290625*^9, 3.528147063703125*^9}, 
   3.528152217515625*^9, {3.52815459203125*^9, 3.528154618515625*^9}, {
   3.528154653875*^9, 3.52815465446875*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["9 Hollow Borg Maker", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.5281903938429327`*^9, 3.5281903971259737`*^9}}],

Cell[CellGroupData[{

Cell["Alex Hirsbrunner", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.52819041101551*^9, 3.5281904146273203`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", ":=", 
   RowBox[{"Random", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", "RotateLeft"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{".2", ",", "\[Rho]", ",", ".2"}], "]"}], ",", 
      RowBox[{"Cuboid", "[", 
       RowBox[{
        RowBox[{"\[Lambda]", "=", 
         RowBox[{"r", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Zeta]", ",", "\[Rho]", ",", "\[Rho]"}], "}"}], ",", 
           "\[Alpha]"}], "]"}]}], ",", 
        RowBox[{"\[Lambda]", "+", 
         RowBox[{"r", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "/", "8"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sign", "[", 
               RowBox[{"\[Zeta]", "-", ".5"}], "]"}], ",", "\[Rho]", ",", 
              "\[Rho]"}], "}"}]}], ",", "\[Alpha]"}], "]"}]}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Zeta]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", "!"}], "}"}]}], "]"}], "]"}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["10 G\[ODoubleDot]del Encoding", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154803883189*^9, 3.52815480401036*^9}, {3.528190514414064*^9, 
   3.528190517636833*^9}}],

Cell[CellGroupData[{

Cell["Seth Chandler", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190519954504*^9, 3.5281905229148912`*^9}}],

Cell["\<\
This code shows Godel encoding and decoding and provides an example all in \
140 characters\
\>", "Text",
 CellChangeTimes->{3.528190585242093*^9}],

Cell["\<\
Submitted by \
318529988185580333355835695185539697135629792561288524134350285848022800951325\
229151408520592136158852541953835713923297949227957707077133521461322467334508\
172036847060316243893268144452785936440158518305551473325299727304763711110329\
287551216696963208853221833711375491326784323252013210882919619325807957933161\
504604268965158769075651508985606323565975167578513574156112683061514485025757\
250383031091175207565850406373538840838148096180278765890848005500856698441903\
304141477325507765889696195133221003608365636702599988080001058430335656831252\
712193050408724921219182007008760962365683714151088859712029666927315427551554\
925454967772737613701334874685678974620614679883763528327023152633862086210246\
826100321321672213266654436030701219338437877146254730740883938130871183351894\
471114484812093247646268723965376579181538675136261397992529039035794973004081\
571489932125034307086391206378783736022643725201925071184070308151004016607018\
923508085649856128914261728870040903049610105977548620989638685639376755679602\
242061171653149840139847517364563257942429718082208095395266486311417336301754\
438881982906570139327125810425933473980803411761390638409219552253510819406913\
331665853324954768492181630594902615688626124467479176913365373543555839882944\
200558723484367344774728208889126525495745028423767634809002935362704898691739\
179095540058705734780478312519303612731344663249930523817420407751032380377107\
392177258097058908901992973593243638901363451021763325637730527369343557999647\
045781457815798391148541781349575877062851557307717817790746831202906361804946\
334735967722224398077940848774335247435081215369772435424289036157855090963641\
285598226039575023095500680892041700048703419992599030694614371570895949178627\
032580767880629196960080967311304898993335445266377774238368346896992578137588\
346646647027224317468381868804818439740837857304792851806507155368252912169519\
783951071635559956008973120890899224926650807292375608826241235274453849715576\
830452068398607740472166742999584168599076368913397064694905403217099686795660\
950630581808472771952997036207215276370523821172463064391367263434371188728301\
56537112158640537600000000000000000000000000000000\
\>", "Text",
 CellChangeTimes->{{3.5281572077778597`*^9, 3.528157213406704*^9}, {
  3.528190621096367*^9, 3.528190633969492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalG]", "[", "s_", "]"}], ":=", 
   RowBox[{"Reap", "[", 
    RowBox[{"FromCharacterCode", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "/@", 
        RowBox[{"FactorInteger", "@", 
         RowBox[{"Sow", "[", 
          RowBox[{"Times", "@@", 
           SuperscriptBox[
            RowBox[{"Prime", "[", 
             RowBox[{"Range", "@", 
              RowBox[{"Length", "@", "#"}]}], "]"}], "#"]}], "]"}]}]}], "&"}],
       "@", 
      RowBox[{"ToCharacterCode", "@", "s"}]}], "]"}], "]"}]}], ";", 
  RowBox[{
  "\[ScriptCapitalG]", "[", "\"\<Godel encoding makes big numbers\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5281567269785833`*^9, 3.528156977325045*^9}, {
  3.52815710532725*^9, 3.5281571236295023`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["11 Random shuffling", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.5281548050723124`*^9, 3.528154805224318*^9}, 3.5281907248775377`*^9}],

Cell[CellGroupData[{

Cell["Antonin Slavik", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.5281907086710176`*^9, 3.5281907143303967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"ImagePartition", "[", 
     RowBox[{
      RowBox[{"ExampleData", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}]}], ",", 
      "64"}], "]"}]}]}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "f"}], "}"}], "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"l", ",", "2"}], "]"}]}], ";", 
    RowBox[{"ImageAssemble", "@", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"l", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"t", "\[Rule]", "f"}], ",", 
           RowBox[{"f", "\[Rule]", "t"}]}], "}"}]}]}], ",", "8"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5280420310277486`*^9, 3.528042031402149*^9}, {
   3.528042879216645*^9, 3.5280428901093135`*^9}, {3.528042948795966*^9, 
   3.528042949061167*^9}, 3.528043017288635*^9, {3.528043635504673*^9, 
   3.528043659725955*^9}, {3.528043714740407*^9, 3.5280437476419644`*^9}, {
   3.528043798405756*^9, 3.528043803085764*^9}, {3.5280438706902876`*^9, 
   3.5280438896861725`*^9}, {3.5280440306035786`*^9, 3.528044036281989*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["12 Spyglass", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.5281548060568037`*^9, 3.5281548062246647`*^9}, 3.528190732770565*^9}],

Cell[CellGroupData[{

Cell["Antonin Slavik", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, 3.5281907195147457`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"ExampleData", "@", 
    RowBox[{"{", 
     RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}]}]}], ";", 
  RowBox[{"m", "=", 
   RowBox[{
    RowBox[{"DiskMatrix", "[", 
     RowBox[{"80", ",", 
      SuperscriptBox["2", "9"]}], "]"}], "+", ".2"}]}], ";", 
  RowBox[{"Dynamic", "@", 
   RowBox[{"ImageMultiply", "[", 
    RowBox[{"i", ",", 
     RowBox[{"Image", "[", 
      RowBox[{"m", "=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{"m", ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "30"}], ",", "30"}], "}"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzFsog3EYBvCFtD6yOaQlYRrJhV1oyCGWZjNabTklFjKHtqWUK5EYudAo
OUWLGYsc5kY5y+xrDmluWMmNsfJNuyFKS77nf/H263nfp1fY1qPRhXE4HCE7
MJqeHi6oZKT7Lu4INC/E2KBXZjmCseN9f6WsplNjZBkrw/UkwLqoiGSoquaJ
IKW+yoZNY0cSkq91+TBkCkqh7XdVDg2ysyrSs+6q4GVnYaKGlW4Tp8AuxYMe
Tu3OGGCKvGIC5m6HT0Fr+vAauae6iXRegwNq4ib2YL99/QBaki+Iju+hG7hl
om+hneHew8ygnthifXmAxSeDj3Axw/sEzynDM+zI2vPBHH+JHwok4voa/Nve
IL6qfLPQNumag5v25mXo8b+vwENtkQ8K1D/EN/EXA49XGz9g1h0VgrJPSXgt
9sZ5TiurtjwqAirNAQoe6EPE+N5uHuxbquPDycBoGnSPF4jgvl/pbmdNci4T
bxU7TgOrQjDggnKtkTKy8ugb4o70nQcHGQcf/gMd3/oU
  "]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["13 Down the drain", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}}],

Cell[CellGroupData[{

Cell["Yves Klett", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}}],

Cell["\<\
If this does not make it, then do away with the smiling face!\
\>", "Text",
 CellChangeTimes->{{3.5281635052861156`*^9, 3.5281635424071674`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["u", "2"], "+", 
       SuperscriptBox["v", "2"], "+", "o"}]]}], ";", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"r", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", 
         RowBox[{"-", "r"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Texture", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\[HappySmiley]", ",", 
          SuperscriptBox["10", "3"]}], "]"}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"o", ",", "9", ",", ".1"}], "}"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["14 Instant Recursive Art", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, {3.528190905261118*^9, 3.5281909055475683`*^9}, 
   3.5281909501350718`*^9}],

Cell[CellGroupData[{

Cell["Yves Klett", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}}],

Cell["\<\
Is your code beautyful? See for yourself and paste this line into your \
favorite notebook or help page and evaluate. Evaluate multiple times for \
enhanced effect. Be prepared to ugrade your machine. Make your local artist \
envious. Test your skills to the max by reverse engineering the code. Write \
code that looks like a bumblebee!\
\>", "Text",
 CellChangeTimes->{{3.5281052792416325`*^9, 3.5281053233781567`*^9}, {
  3.5281055153751383`*^9, 3.5281055483550243`*^9}, {3.528105655706165*^9, 
  3.528105676997382*^9}, {3.528105733635622*^9, 3.5281057560749054`*^9}, {
  3.5281058384516172`*^9, 3.5281058646371145`*^9}, {3.5281632762747946`*^9, 
  3.528163289194813*^9}}],

Cell[BoxData[
 RowBox[{"Colorize", "@", 
  RowBox[{"WatershedComponents", "[", 
   RowBox[{"Erosion", "[", 
    RowBox[{
     RowBox[{"ImportString", "[", 
      RowBox[{
       RowBox[{"ExportString", "[", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<JPG\>\""}], 
        "]"}], ",", "\"\<JPG\>\""}], "]"}], ",", "1"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.528105495926026*^9, 3.528105496108036*^9}, {
   3.52816238744355*^9, 3.528162424143602*^9}, {3.528162496453703*^9, 
   3.528162507913719*^9}, {3.528162632223893*^9, 3.5281626525239215`*^9}, {
   3.528162849114197*^9, 3.5281628769142356`*^9}, 3.528163209114701*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["15 Spherical", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191005871052*^9}, {3.528191167505259*^9, 3.52819117185539*^9}, {
   3.529085406301569*^9, 3.529085406506421*^9}}],

Cell[CellGroupData[{

Cell["Radko Kriz", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.5281911561799383`*^9}],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"SphericalPlot3D", "[", 
    RowBox[{
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"3", "\[Phi]"}], "]"}], " ", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"20", "\[Theta]"}], "]"}], "/", "9"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.5", ",", "0.1"}], "}"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["16 Revolution", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191007075473*^9}, {3.528191173405361*^9, 3.528191175790312*^9}, {
   3.529085408930005*^9, 3.529085409090355*^9}}],

Cell[CellGroupData[{

Cell["Radko Kriz", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.5281911578709803`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"RevolutionPlot3D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{"2", "a"}]], "-", 
        SuperscriptBox["t", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RevolutionAxis", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5281685846843853`*^9, 3.528168618312309*^9}, {
   3.5281686717863674`*^9, 3.528168680152846*^9}, {3.5281687124726944`*^9, 
   3.5281687496598215`*^9}, 3.5281688241310806`*^9, {3.5281688583780394`*^9, 
   3.5281688590720797`*^9}, 3.528168910003992*^9, 3.5281690313519335`*^9, {
   3.5281691749641476`*^9, 3.5281692041268153`*^9}, {3.528169278951095*^9, 
   3.528169288199624*^9}, 3.5281710125712523`*^9, 3.5281710704985657`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["17 Echidnahedron", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191007846774*^9}, {3.528191177421089*^9, 3.528191177982396*^9}, {
   3.529085410818348*^9, 3.529085410986165*^9}}],

Cell[CellGroupData[{

Cell["Radko Kriz", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.528191159704211*^9}],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "a", "]"}], ",", 
      RowBox[{"Glow", "[", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"a", ",", 
         RowBox[{"1", "-", "a"}], ",", 
         RowBox[{"1", "-", "a"}]}], "]"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "White", "]"}], ",", 
      RowBox[{"Lighting", "\[Rule]", "None"}], ",", 
      RowBox[{"PolyhedronData", "[", 
       RowBox[{"\"\<Echidnahedron\>\"", ",", "\"\<Faces\>\""}], "]"}]}], 
     "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.5281659515637794`*^9, 3.5281659772682495`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["18 Desktop Search Engine", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191008649063*^9}, {3.528191391459484*^9, 3.528191392874715*^9}, {
   3.529085413242577*^9, 3.529085413386397*^9}}],

Cell[CellGroupData[{

Cell["Sascha Kratky", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.528191403615535*^9}],

Cell["\<\
The following one-liner is a helper function that is handy in daily use. It \
acts as a replacement for desktop search engines like Spotlight or Google \
Desktop Search and lets you search the contents of files using a Manipulate.\
\>", "Text",
 CellChangeTimes->{{3.528181349988873*^9, 3.528181354476178*^9}, {
   3.52818138904405*^9, 3.5281815376325483`*^9}, {3.528181583771106*^9, 
   3.52818159364979*^9}, {3.528181636668157*^9, 3.528181639675948*^9}, 
   3.528182124557077*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DS", "[", 
   RowBox[{"d_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pick", "[", 
     RowBox[{
      RowBox[{"x", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Or", "@@", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"ToString", "[", "s", "]"}]}], "]"}]}], "&"}], "/@", 
       RowBox[{
       "x", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], "]"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Initialization", ":>", 
     RowBox[{"{", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"f", ",", "d", ",", "\[Infinity]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"ReadList", "[", 
              RowBox[{"#", ",", "Word"}], "]"}], "&"}], "/@", "#"}]}], "}"}], 
         "&"}]}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5270052116674*^9, 3.527005213809657*^9}, {
   3.527005276402985*^9, 3.5270053242273903`*^9}, {3.5270053970967607`*^9, 
   3.527005430550186*^9}, {3.52700550941292*^9, 3.527005516938899*^9}, {
   3.527005603296556*^9, 3.527005607362276*^9}, {3.527005648695747*^9, 
   3.527005653686167*^9}, {3.527005765859131*^9, 3.527005785113245*^9}, {
   3.527005938183803*^9, 3.527005942251732*^9}, {3.5270060700249157`*^9, 
   3.527006071357916*^9}, {3.527047923475107*^9, 3.527047946129589*^9}, {
   3.5270480357952957`*^9, 3.527048112242278*^9}, {3.527048190215742*^9, 
   3.527048227086162*^9}, {3.527048510861484*^9, 3.527048514130323*^9}, {
   3.527048760324279*^9, 3.5270487706492357`*^9}, {3.527048910530765*^9, 
   3.527048921611333*^9}, {3.527050859584695*^9, 3.52705090827789*^9}, {
   3.527057359992346*^9, 3.52705737696315*^9}, {3.527057526047722*^9, 
   3.527057531267454*^9}, {3.527057710710711*^9, 3.527057715389162*^9}, {
   3.527058336358433*^9, 3.5270583632579803`*^9}, {3.527058416332704*^9, 
   3.5270584558643513`*^9}, {3.527058527981982*^9, 3.527058548636498*^9}, 
   3.5270585924530077`*^9, {3.527059185644099*^9, 3.527059199938004*^9}, {
   3.527059236671035*^9, 3.527059245201178*^9}, 3.527060491562426*^9, {
   3.5270615435422297`*^9, 3.5270615625906153`*^9}, 3.527061624468174*^9, {
   3.527087264146846*^9, 3.527087279465269*^9}, {3.527162754965625*^9, 
   3.52716275598125*^9}, {3.527166960706616*^9, 3.527166962415792*^9}, 
   3.5271670850762587`*^9, {3.527167151311651*^9, 3.527167177595125*^9}, 
   3.527167228251627*^9}],

Cell["\<\
In the Manipulate text box you can use wildcard characters supported by \
StringMatchQ.\
\>", "Text",
 CellChangeTimes->{{3.528181349988873*^9, 3.528181354476178*^9}, {
   3.52818138904405*^9, 3.5281815376325483`*^9}, {3.528181629190791*^9, 
   3.5281816324675217`*^9}, {3.528181703397547*^9, 3.52818176614937*^9}, {
   3.528181799914126*^9, 3.528181883490265*^9}, {3.528181918094545*^9, 
   3.5281819404848623`*^9}, 3.52818213352313*^9}],

Cell["Example Use (then enter search string TODO):", "Text",
 CellChangeTimes->{{3.5281818277721853`*^9, 3.5281818440057592`*^9}, {
  3.5281820821285973`*^9, 3.528182099099766*^9}}],

Cell[BoxData[
 RowBox[{"DS", "[", 
  RowBox[{"$InstallationDirectory", ",", "\"\<*.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.5281816429651403`*^9, 3.528181656664246*^9}}],

Cell["\<\
One drawback of the function: If the computer\[CloseCurlyQuote]s hard drive \
is slow the Manipulate initialization may time out.\
\>", "Text",
 CellChangeTimes->{{3.528181349988873*^9, 3.528181354476178*^9}, {
  3.52818138904405*^9, 3.5281815376325483`*^9}, {3.528181629190791*^9, 
  3.5281816324675217`*^9}, {3.528181703397547*^9, 3.52818176614937*^9}, {
  3.528181799914126*^9, 3.528181883490265*^9}, {3.528181918094545*^9, 
  3.5281820088551693`*^9}, {3.528182103297982*^9, 3.52818210494522*^9}, {
  3.52818216557232*^9, 3.5281821690583687`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["19 Collatz sequences", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.5281910094257812`*^9}, {3.528191782099745*^9, 3.528191785762404*^9}, {
   3.5281920977714043`*^9, 3.528192105665477*^9}, {3.529085421058579*^9, 
   3.529085421138229*^9}}],

Cell[CellGroupData[{

Cell["Craig Rollins", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528191776531123*^9, 3.528191777986624*^9}, {
   3.5281919678412323`*^9, 3.528191970247978*^9}, 3.5281921146837*^9}],

Cell["\<\
WRI one-liner judges,

The attached program computes Collatz sequences, and displays them on a \
semi-Log plot.

According to M.S. Word, the text file containing the program comes to 139 \
characters.

If for some reason, my count is off, the .nb file saved a couple of \
characters for the expressions 2^15 and 2^30, and I would like the benefit of \
the shorter character count.

It is an open question whether these sequences will always hit bottom. The \
plot suggests some sequences that haven\[CloseCurlyQuote]t hit bottom (YET). \
Will they eventually? The answer is available by adding PlotRange->All to the \
plot command, but as that brings me to more than 140 characters, I will need \
to leave you in suspense about that, emphasizing the open question at hand.

I had a lot of trouble trying to save the .nb file with the graphic contained \
within. It is omitted from the .nb file. Sorry. The competition rules don\
\[CloseCurlyQuote]t say that it is required.

Enjoy ! !\
\>", "Text",
 CellChangeTimes->{3.528192126741433*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Added", " ", "by", " ", "Carlson"}], " ", "*)"}], " ", 
  RowBox[{"ClearAll", "[", 
   RowBox[{"f", ",", "p", ",", "i"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.528194278196227*^9, 3.528194316264143*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", "?", "EvenQ"}], "]"}], ":=", 
    RowBox[{"x", "/", "2"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", "?", "OddQ"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "x"}], "+", "1"}], ")"}], "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"i", "=", "0"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"i", "<", 
     SuperscriptBox["2", "10"]}], ",", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"p", ",", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"NestWhileList", "[", 
           RowBox[{"f", ",", 
            RowBox[{
             SuperscriptBox["2", "30"], "+", "i"}], ",", 
            RowBox[{
             RowBox[{"#", ">", "1"}], "&"}]}], "]"}], "//", "N"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"p", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.52818683696875*^9, 3.528186838953125*^9}, {
  3.52818720465625*^9, 3.52818721559375*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["20 Animated Sky Chart", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191010714926*^9}, {3.528192234551508*^9, 3.528192234750061*^9}, {
   3.5290854233069143`*^9, 3.5290854233945713`*^9}}],

Cell[CellGroupData[{

Cell["Zdenek Buk", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.5281922418778467`*^9}],

Cell["\<\
The following code shows the animated shy chart for the next ten days (in \
current time) \[LongDash] 10 has been chosen for the speed purposes. You can \
change it to any value.\
\>", "Text",
 CellChangeTimes->{{3.5281432765464487`*^9, 3.528143397052943*^9}, {
  3.52814356152017*^9, 3.528143581478922*^9}, {3.528189700908226*^9, 
  3.528189763890147*^9}, {3.5281898792144613`*^9, 3.5281898828070498`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"WolframAlpha", "[", 
        RowBox[{
         RowBox[{"\"\<sky chart \>\"", "<>", "#"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<SkyMap:AstronomicalData\>\"", ",", "1"}], "}"}], 
           ",", "\"\<Content\>\""}], "}"}]}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"DateString", "[", 
        RowBox[{"DatePlus", "[", 
         RowBox[{
          RowBox[{"Date", "[", "]"}], ",", "#"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       StyleBox["10",
        FontColor->RGBColor[1, 0.5, 0]], "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "[", "g", "]"}]}], "Input",
 CellChangeTimes->{{3.528189592907851*^9, 3.5281896309546757`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["21 Let the others do all the work", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191011806139*^9}, {3.528192641028624*^9, 3.528192641251728*^9}, {
   3.529085424954775*^9, 3.529085425058824*^9}}],

Cell[CellGroupData[{

Cell["Yves Klett", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.52819264721239*^9, 3.528192648834779*^9}}],

Cell["\<\
Get a quick preview of the awesome featured demonstrations and click on them. \
Kudos to all demo authors and CDF plugin. The 140 character limit cut it \
somewhat sharp here.\
\>", "Text",
 CellChangeTimes->{{3.5281913490710373`*^9, 3.5281914305686984`*^9}, {
  3.528191542680111*^9, 3.5281915500495324`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"i", "=", "Import"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hyperlink", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"#", "<>", "\"\<HTMLImages/index.en/thumbnail_1.gif\>\""}], 
      "]"}], ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{
   RowBox[{"i", "[", 
    RowBox[{
    "\"\<http://demonstrations.wolfram.com/featured.html\>\"", ",", 
     "\"\<Hyperlinks\>\""}], "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"7", ";;", 
    RowBox[{"-", "14"}]}], "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.528190295131755*^9, 3.528190340303339*^9}, 
   3.5281904084332356`*^9, {3.528190522120738*^9, 3.5281905839642754`*^9}, 
   3.5281908145724654`*^9, {3.528190886217563*^9, 3.5281909184764085`*^9}, {
   3.5281909497691984`*^9, 3.52819098966348*^9}, {3.5281911768791885`*^9, 
   3.5281912035967164`*^9}}],

Cell[BoxData["Import"], "Output",
 CellChangeTimes->{3.528191461634475*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
22 Entry 1: All Nonisomorphic Graphs on Five or Fewer Vertices\
\>", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191012565792*^9}, {3.528193193285742*^9, 3.528193193485601*^9}, {
   3.529085426327271*^9, 3.529085426483053*^9}}],

Cell[CellGroupData[{

Cell["Richard Mercer", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.5281931816007557`*^9, 3.528193183740848*^9}}],

Cell[TextData[{
 "This was motivated by a discussion with a student taking a course in Graph \
Theory who was assigned to list these graphs by hand. I wanted to show her \
that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " could do this. It didn\[CloseCurlyQuote]t turn out like I hoped because I \
tried to use the option Method-> \[OpenCurlyDoubleQuote]CircularEmbedding\
\[CloseCurlyDoubleQuote], but those graphs which used less than five vertices \
used different embeddings. This implementation gets around that problem."
}], "Text",
 CellChangeTimes->{{3.528188428268991*^9, 3.528188692309387*^9}, {
  3.528188983132378*^9, 3.528188993063834*^9}, {3.528192759262158*^9, 
  3.528192761664743*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", " ", "=", " ", "GraphData"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"Range", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "#", "]"}], ",", 
       RowBox[{"Sin", "[", "#", "]"}]}], "}"}], "&"}], "/@", " ", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "5"}], "r"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{"r", ",", "#", ",", 
       RowBox[{"VertexCoordinates", "\[Rule]", "v"}]}], "]"}], "&"}], " ", "/@",
     " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"#", ",", "\"\<EdgeIndices\>\""}], "]"}], "&"}], " ", "/@", 
      " ", 
      RowBox[{"F", "[", "5", "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "34", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5281255287960873`*^9, 3.528125529266244*^9}, {
   3.528126644084909*^9, 3.5281266507328663`*^9}, {3.528135864377442*^9, 
   3.5281358789754057`*^9}, {3.528136548284778*^9, 3.528136570144967*^9}, 
   3.528136602553911*^9, 3.5281368191723957`*^9, {3.5281368568104677`*^9, 
   3.5281368851376247`*^9}, {3.528136945236375*^9, 3.52813694790384*^9}, {
   3.528136978100873*^9, 3.528136994686112*^9}, {3.5281370711803513`*^9, 
   3.5281370726468773`*^9}, {3.528137598689068*^9, 3.5281376980853777`*^9}, {
   3.528137877905608*^9, 3.528137920035565*^9}, 3.5281381238396597`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["23 Wolf\[CloseCurlyQuote]s Tour", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191013439796*^9}, {3.5281932209585333`*^9, 3.528193221165859*^9}, {
   3.529085439980212*^9, 3.529085440010933*^9}}],

Cell[CellGroupData[{

Cell["Richard Mercer", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528193214607003*^9, 3.52819321714077*^9}}],

Cell["\<\
I attempted to create a \[OpenCurlyDoubleQuote]Knight\[CloseCurlyQuote]s Tour\
\[CloseCurlyDoubleQuote] demostration in 140 characters. This was frustrating \
because the implementations of the various commands required all conspired to \
make the code far longer than it really needed to be.\
\>", "Text",
 CellChangeTimes->{{3.528186927253389*^9, 3.5281869742282133`*^9}, {
   3.528187009305902*^9, 3.528187125141591*^9}, 3.528187214974539*^9, 
   3.528188742459797*^9, 3.528190571197155*^9, {3.528192654989771*^9, 
   3.528192657666472*^9}}],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]KnightTourGraph\[CloseCurlyDoubleQuote] produced a \
graph with vertices indexed by numbers from 1 to 64 instead of grid \
coordinates. It required  28 characters to convert to grid coordinates.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.5281872727730417`*^9, 3.5281873272131147`*^9}, {
   3.5281874523685217`*^9, 3.5281874749391413`*^9}, {3.528187594749194*^9, 
   3.528187623173172*^9}, {3.528190591698432*^9, 3.5281906142400084`*^9}, 
   3.528192687440969*^9, {3.528192806341653*^9, 3.528192812691804*^9}}],

Cell[TextData[{
 "\[OpenCurlyDoubleQuote]FindHamiltonianCycle\[CloseCurlyDoubleQuote] was the \
longest command name possible (in Wolfram tradition). It could have been \
\[OpenCurlyDoubleQuote]HamiltonianCycle\[CloseCurlyDoubleQuote] as it was in \
the ",
 StyleBox["Combinatorica",
  FontSlant->"Italic"],
 " package, or something shorter. Cost: 4+ characters."
}], "ItemNumbered",
 CellChangeTimes->{{3.528187627302762*^9, 3.528187742338615*^9}, {
   3.52818783371574*^9, 3.52818784194706*^9}, {3.528187891844742*^9, 
   3.528187895452837*^9}, 3.528192556198373*^9, 3.528192710838563*^9, 
   3.528192828900569*^9, {3.528192859791218*^9, 3.5281928803571987`*^9}}],

Cell["\<\
The output of FindHamiltonianCycle was wrapped in a completely redundant set \
of braces, requiring an extra application of First to get rid of them. Cost: \
6 characters.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.528187771436801*^9, 3.5281878886906424`*^9}, {
  3.528188777664342*^9, 3.528188780404644*^9}, {3.528192896279539*^9, 
  3.528192897876301*^9}}],

Cell["\<\
The Grid default is to show no dividers, so I had to explicitly request them. \
Cost: 12 characters.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.5281879154161997`*^9, 3.528187994823723*^9}, {
  3.528190516434084*^9, 3.528190526603932*^9}}]
}, Closed]],

Cell["\<\
As a result of all this nonsense my code ended up with 150 characters. I \
could have saved one more but it was pointless. This is the Unofficial Entry. \
I also offer an Official Entry with no dividers, where the Knight\
\[CloseCurlyQuote]s Tour takes place on an invisible chessboard (137 \
characters). I think you\[CloseCurlyQuote]ll agree it just isn\
\[CloseCurlyQuote]t the same.\
\>", "Text",
 CellChangeTimes->{{3.528186927253389*^9, 3.5281869742282133`*^9}, {
   3.528187009305902*^9, 3.528187125141591*^9}, 3.528187214974539*^9, {
   3.528188007715972*^9, 3.528188225738019*^9}}],

Cell["\<\
Please Note: If you reexecute these commands, press the \
\[OpenCurlyDoubleQuote]Slower\[CloseCurlyDoubleQuote] button 12 times to get \
a more reasonable Animation Speed.\
\>", "Text",
 CellChangeTimes->{{3.528190254013679*^9, 3.528190347814801*^9}},
 FontSize->14,
 FontWeight->"Bold"]
}, Closed]],

Cell[CellGroupData[{

Cell["Unofficial Entry (150)", "Subsubsection",
 CellChangeTimes->{{3.528186978150374*^9, 3.528186997318101*^9}, {
  3.528188274472506*^9, 3.528188277983551*^9}}],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"\"\< \>\"", ",", 
         RowBox[{"{", "8", "}"}], ",", 
         RowBox[{"{", "8", "}"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{
              RowBox[{"k", "-", "1"}], ",", "8"}], "]"}], "+", "1"}], ")"}], 
          "&"}], " ", "/@", 
         RowBox[{"{", 
          RowBox[{"Quotient", ",", "Mod"}], "}"}]}], "\[Rule]", " ", 
        "\[Wolf]"}]}], "]"}], ",", 
     RowBox[{"Dividers", "\[Rule]", " ", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"First", "/@", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"FindHamiltonianCycle", "[", 
        RowBox[{"KnightTourGraph", "[", 
         RowBox[{"8", ",", "8"}], "]"}], "]"}]}]}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.528153171454019*^9, 3.528153183019738*^9}, {
   3.528153219680767*^9, 3.528153219799656*^9}, {3.528153427493456*^9, 
   3.528153473978551*^9}, {3.528153596397291*^9, 3.528153602865342*^9}, {
   3.52815370110956*^9, 3.5281537789628763`*^9}, {3.528153835304872*^9, 
   3.528153836328636*^9}, {3.528153871359074*^9, 3.52815387510639*^9}, {
   3.528153933948262*^9, 3.528153951166312*^9}, {3.528153994695673*^9, 
   3.528154023285088*^9}, {3.528154184866929*^9, 3.528154190659588*^9}, 
   3.528154618011674*^9, {3.5281546680647287`*^9, 3.528154669540791*^9}, {
   3.528154793292274*^9, 3.528154886112239*^9}, {3.5281550485162563`*^9, 
   3.5281550758973083`*^9}, {3.528155584861706*^9, 3.5281555945907393`*^9}, {
   3.528155719120544*^9, 3.528155735840487*^9}, {3.5281557758043203`*^9, 
   3.528155781971601*^9}, {3.5281570522508574`*^9, 3.5281570752939253`*^9}, {
   3.5281571363428793`*^9, 3.528157137912644*^9}, {3.528157946504389*^9, 
   3.528157951734745*^9}, {3.528158320936934*^9, 3.528158329743153*^9}, {
   3.528190657235911*^9, 3.528190660766798*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Official Entry (137)", "Subsubsection",
 CellChangeTimes->{{3.528186978150374*^9, 3.528186997318101*^9}, 
   3.528188240197817*^9, {3.5281882810278873`*^9, 3.5281882842744513`*^9}}],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"ReplacePart", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"\"\< \>\"", ",", 
        RowBox[{"{", "8", "}"}], ",", 
        RowBox[{"{", "8", "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"k", ",", "8"}], "]"}], "+", "1"}], ")"}], "&"}], " ", "/@", 
        RowBox[{"{", 
         RowBox[{"Quotient", ",", "Mod"}], "}"}]}], "\[Rule]", " ", 
       "\[Wolf]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{
      RowBox[{"First", "/@", " ", 
       RowBox[{"First", " ", "@", " ", 
        RowBox[{"FindHamiltonianCycle", "[", 
         RowBox[{"KnightTourGraph", "[", 
          RowBox[{"8", ",", "8"}], "]"}], "]"}]}]}], "-", "1"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.528153171454019*^9, 3.528153183019738*^9}, {
   3.528153219680767*^9, 3.528153219799656*^9}, {3.528153427493456*^9, 
   3.528153473978551*^9}, {3.528153596397291*^9, 3.528153602865342*^9}, {
   3.52815370110956*^9, 3.5281537789628763`*^9}, {3.528153835304872*^9, 
   3.528153836328636*^9}, {3.528153871359074*^9, 3.52815387510639*^9}, {
   3.528153933948262*^9, 3.528153951166312*^9}, {3.528153994695673*^9, 
   3.528154023285088*^9}, {3.528154184866929*^9, 3.528154190659588*^9}, 
   3.528154618011674*^9, {3.5281546680647287`*^9, 3.528154669540791*^9}, {
   3.528154793292274*^9, 3.528154886112239*^9}, {3.5281550485162563`*^9, 
   3.5281550758973083`*^9}, {3.528155584861706*^9, 3.5281555945907393`*^9}, {
   3.528155719120544*^9, 3.528155735840487*^9}, {3.5281557758043203`*^9, 
   3.528155781971601*^9}, {3.5281570522508574`*^9, 3.5281570752939253`*^9}, {
   3.5281571363428793`*^9, 3.528157137912644*^9}, {3.528157946504389*^9, 
   3.528157951734745*^9}, {3.528158320936934*^9, 3.528158329743153*^9}, {
   3.528186865833342*^9, 3.5281868708931723`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["24 Anagram Bands", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191014254506*^9}, {3.5281949245604687`*^9, 3.5281949247748632`*^9}, {
   3.529085442019136*^9, 3.529085442099489*^9}}],

Cell[CellGroupData[{

Cell["William Wu", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.528194828824904*^9}],

Cell["Description", "Text",
 CellChangeTimes->{{3.5281916833525457`*^9, 3.5281916844446573`*^9}},
 FontWeight->"Bold"],

Cell[TextData[{
 "This is a method for generating all anagrams of the form [Adjective] \
[Noun]. Many of the resulting anagrams would be ideal names for music bands. \
Some gems include: \n",
 "\t",
 StyleBox["supersonic percussion, insatiable banalities, paternalistic \
antiparticles, oceanic cocaine, isometric eroticism, sloppy polyps, ruthless \
hustlers, cosmic comics, angriest ingrates ",
  FontFamily->"Courier New"],
 "\n\nTo fit within the 140 character limit, I employ a stochastic random \
sampling approach which is slow to generate the bands, but it works. \n\n\
Footnote: For a faster listing of all the solutions though, you can use the \
following algorithm which finishes more quickly: \n\t",
 Cell[BoxData[
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"DictionaryLookup", "@", "\<\"*\"\>"}], ",", 
         RowBox[{
          RowBox[{"Sort", "@", 
           RowBox[{"Characters", "@", "#"}]}], "&"}]}], "]"}]}], ",", "1"}], 
     "]"}], ",", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"WordData", "[", "#", "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         "#"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Adjective\"\>", ",", "\<\"Noun\"\>"}], "}"}]}], "]"}], 
     "&"}]}], "]"}]], "Text"],
 "\nbut this is 142 characters."
}], "Text",
 CellChangeTimes->{{3.528190933987029*^9, 3.5281909877382812`*^9}, {
  3.528191138647884*^9, 3.5281911520709333`*^9}, {3.528191183623477*^9, 
  3.528191516256255*^9}, {3.528191572047456*^9, 3.5281915729995317`*^9}, {
  3.528191610760071*^9, 3.528191734775713*^9}, {3.5281924217278147`*^9, 
  3.528192423802264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomSample", "[", 
     RowBox[{"WordData", "[", 
      RowBox[{"All", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<Adjective\>\"", ",", "\"\<Noun\>\""}], "}"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "\[NotEqual]", "n"}], "&&", 
       RowBox[{"Equal", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "@", 
            RowBox[{"Characters", "@", "#"}]}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"a", ",", "n"}], "}"}]}], ")"}]}]}], ",", 
      RowBox[{"Print", "[", 
       RowBox[{"a", "<>", "\"\< \>\"", "<>", "n"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"w", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"w", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.528144517824356*^9, 3.52814452205046*^9}, {
   3.52814563140672*^9, 3.528145774925457*^9}, {3.52814583970331*^9, 
   3.528145862311756*^9}, 3.5281909380406933`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"poetical copalite\"\>"], "Print",
 CellChangeTimes->{3.528167384346692*^9}],

Cell[BoxData["\<\"reformist firestorm\"\>"], "Print",
 CellChangeTimes->{3.5281673960927677`*^9}],

Cell[BoxData["\<\"snub buns\"\>"], "Print",
 CellChangeTimes->{3.528167568470299*^9}],

Cell[BoxData["\<\"takeout outtake\"\>"], "Print",
 CellChangeTimes->{3.528167626869782*^9}],

Cell[BoxData["\<\"octuple couplet\"\>"], "Print",
 CellChangeTimes->{3.528167685012714*^9}],

Cell[BoxData["\<\"supple peplus\"\>"], "Print",
 CellChangeTimes->{3.528167723858651*^9}],

Cell[BoxData["\<\"gelid glide\"\>"], "Print",
 CellChangeTimes->{3.528167737426569*^9}],

Cell[BoxData["\<\"north thorn\"\>"], "Print",
 CellChangeTimes->{3.528167786534205*^9}],

Cell[BoxData["\<\"redolent rondelet\"\>"], "Print",
 CellChangeTimes->{3.528167808271883*^9}],

Cell[BoxData["\<\"brainy binary\"\>"], "Print",
 CellChangeTimes->{3.5281678095132637`*^9}],

Cell[BoxData["\<\"monied domine\"\>"], "Print",
 CellChangeTimes->{3.52816783728364*^9}],

Cell[BoxData["\<\"plain lapin\"\>"], "Print",
 CellChangeTimes->{3.528167842538368*^9}],

Cell[BoxData["\<\"russet tusser\"\>"], "Print",
 CellChangeTimes->{3.528167879267426*^9}],

Cell[BoxData["\<\"russet estrus\"\>"], "Print",
 CellChangeTimes->{3.528167879432185*^9}]
}, Closed]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5281905450869493`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["25 Life\[CloseCurlyQuote]s Work, Easily Replaced", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191015086762*^9}, {3.528194986408388*^9, 3.528194986719561*^9}, {
   3.529085443339675*^9, 3.5290854434510317`*^9}}],

Cell[CellGroupData[{

Cell["William Wu", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.528194858833746*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "@", 
   RowBox[{
   "Uncompress", "@", 
    "\"\<1:eJxTTMoPCrZjYGDQCEgsLU51MLJWtrFTUtBVSEnNSS1JTdFT0tfXqA4oyswrcVDWCS5\
ITcx2UK5V09RU03dwy8xJ9UvMTS2OjgUAuVYUpg==\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.528159340361663*^9, 3.5281593403643017`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["26 I Could Lose My Job For This", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.52819101587322*^9}, {3.5281951241188183`*^9, 3.528195124342581*^9}, {
   3.5290854468356857`*^9, 3.52908544700336*^9}}],

Cell[CellGroupData[{

Cell["William Wu", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195134031616*^9, 3.5281951354529867`*^9}}],

Cell["Description:", "Text",
 CellChangeTimes->{{3.5281921432912683`*^9, 3.5281921453455687`*^9}},
 FontWeight->"Bold"],

Cell[TextData[{
 "At a certain lab, the doors are secured by combination locks with five \
buttons, numbered 1,2,3,4,5. \nThe passcodes for these combination locks all \
adhere to the following rules:\n\n1. The passcode consists of exactly 1 \
two-button press, and two 1-button presses.\n2. No number can be punched more \
than once.\n\nThe following ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " one-liner generates all 180 passcodes that adhere to these rules. \nGiven \
that it takes 5 seconds to test out a combination, any door at this lab can \
be broken into in 7.5 minutes on average.\nThis has been verified in the \
field on many doors."
}], "Text",
 CellChangeTimes->{{3.52797621829669*^9, 3.5279762195485287`*^9}, {
  3.527976283111878*^9, 3.527976284692604*^9}, {3.52797632970105*^9, 
  3.527976646604725*^9}, {3.527976748431528*^9, 3.527976770877425*^9}, {
  3.5279768147045593`*^9, 3.527976865173979*^9}, {3.527976904135928*^9, 
  3.527976904919485*^9}, {3.528165130894413*^9, 3.5281651599377623`*^9}, {
  3.528165998412648*^9, 3.528166041252452*^9}, {3.5281942043704042`*^9, 
  3.528194217317692*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Code:", "Subsection",
 CellChangeTimes->{{3.528192147450192*^9, 3.52819214796174*^9}}],

Cell[BoxData[
 RowBox[{"Sort", "@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Permutations", "[", 
         RowBox[{"Append", "[", 
          RowBox[{"#", ",", "pair"}], "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "@", "5"}], ",", "pair"}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"pair", ",", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Range", "@", "5"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.527976660153131*^9, 3.527976722925138*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["27 Generating Mazes", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191017132008*^9}, {3.528195314077813*^9, 3.528195314325762*^9}, {
   3.5290854492357483`*^9, 3.529085449363474*^9}}],

Cell[CellGroupData[{

Cell["Dave Lawrence", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.5281953094150887`*^9}],

Cell["\<\
This cellular automaton generates maze-like structures.
If a cell is a live and has 1-4 neighbors, it remains alive.
If a cell is dead and has exactly 3 neighbors, then it is born again.
Any other situation results in death.\
\>", "Text",
 CellChangeTimes->{{3.5279869583993063`*^9, 3.527987014621397*^9}}],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"MatrixPlot", "/@", 
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"744", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}]}], "]"}], ",", "0"}], "}"}], ",", 
     "99"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.528159038867002*^9, 3.528159054199663*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "28 World\[CloseCurlyQuote]s Smallest ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Quine"
}], "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.5281910184982023`*^9}, {3.528195469607172*^9, 3.528195469887455*^9}, {
   3.529085452931591*^9, 3.529085453128118*^9}}],

Cell[CellGroupData[{

Cell["Dave Lawrence", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, 3.5281954761732073`*^9}],

Cell["\<\
[note from carlson: A quine is a computer program which takes no input and \
produces a copy of its own source code as its only output. The standard terms \
for these programs in the computability theory and computer science \
literature are self-replicating programs, self-reproducing programs, and \
self-copying programs.]\
\>", "Text",
 CellChangeTimes->{{3.528195459273054*^9, 3.528195498887546*^9}}],

Cell["See below. Don\[CloseCurlyQuote]t miss it.", "Text",
 CellChangeTimes->{{3.5281652689459248`*^9, 3.528165298833375*^9}, {
  3.528165354497295*^9, 3.528165354777759*^9}, {3.5281659749560328`*^9, 
  3.528165975500037*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["29 The Ulam Spiral", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191019890155*^9}, {3.528195574545573*^9, 3.528195574752371*^9}, {
   3.529085455067771*^9, 3.5290854552675467`*^9}}],

Cell[CellGroupData[{

Cell[" Dave Lawrence", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195577274365*^9, 3.528195580879058*^9}}],

Cell["\<\
The Ulam spiral is constructed by starting at (0,0) on the integer grid, \
spiraling outwards, and marking every time step that is prime.\
\>", "Text",
 CellChangeTimes->{{3.52819298443756*^9, 3.528193043741725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "@", "#"}], ",", 
       RowBox[{"Im", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"#1", ",", 
         RowBox[{
          RowBox[{"Last", "@", "#1"}], "+", 
          RowBox[{
           RowBox[{"I", "^", "#2"}], 
           RowBox[{
            RowBox[{"Range", "@", "#2"}], "/", "2"}]}]}]}], "]"}], "&"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"Range", "@", "140"}]}], "]"}]}]}], ";", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"s", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Point", "/@", 
       RowBox[{"s", "\[LeftDoubleBracket]", 
        RowBox[{"Prime", "@", 
         RowBox[{"Range", "@", 
          RowBox[{"PrimePi", "@", 
           RowBox[{"Length", "@", "s"}]}]}]}], "\[RightDoubleBracket]"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.528192863539796*^9, 3.528192864687372*^9}, {
  3.528192914104932*^9, 3.5281929304332533`*^9}, {3.528193068096477*^9, 
  3.528193273614883*^9}, {3.528193346699038*^9, 3.528193401304532*^9}, {
  3.528193451330624*^9, 3.528193455853177*^9}, {3.528193512030723*^9, 
  3.528193608628042*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["30 Sierpinski carpet ", "Section",
 CellChangeTimes->{{3.527944230185368*^9, 3.527944233174354*^9}, 
   3.527944268752858*^9, {3.527945076297192*^9, 3.5279451322246323`*^9}, 
   3.5279468922994328`*^9, {3.528032371321785*^9, 3.528032391672289*^9}, {
   3.528154807110318*^9, 3.528154807246827*^9}, {3.5281908648532953`*^9, 
   3.5281908665010242`*^9}, 3.528190925517581*^9, {3.528190994117034*^9, 
   3.528191019890155*^9}, {3.528195574545573*^9, 3.528195574752371*^9}, {
   3.528197878587111*^9, 3.5281979199212103`*^9}, {3.529085458092203*^9, 
   3.529085458227338*^9}}],

Cell[CellGroupData[{

Cell["Heather May", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195577274365*^9, 3.528195580879058*^9}, {
   3.528197926235167*^9, 3.528197927807521*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "[", "k_", "]"}], ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     SuperscriptBox["3", "k"], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "1"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "/", 
           SuperscriptBox["3", "k"]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#1", " ", "+", " ", "1"}], ",", 
             RowBox[{"#2", " ", "+", " ", "1"}]}], "}"}], "/", 
           SuperscriptBox["3", "k"]}]}], "]"}], "&"}], ",", 
       RowBox[{"c", "[", "k", "]"}], ",", 
       RowBox[{"c", "[", "k", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Background", "\[Rule]", "Red"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.528187784429*^9, 3.528187785108*^9}, {3.528197012201*^9,
   3.528197012666*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["31 Fractal", "Section",
 CellChangeTimes->{{3.527795036701107*^9, 3.52779503841781*^9}, {
  3.529085480037299*^9, 3.529085480227771*^9}}],

Cell[CellGroupData[{

Cell["Stephan Leibbrandt", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195577274365*^9, 3.528195580879058*^9}, {
   3.528197926235167*^9, 3.528197927807521*^9}, {3.5290855013021793`*^9, 
   3.529085504268931*^9}}],

Cell[BoxData[
 RowBox[{"Image", "@", 
  RowBox[{
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "x", ",", "p"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "=", "0"}], ";", 
          RowBox[{"x", "=", 
           RowBox[{"0.", "I"}]}], ";", 
          RowBox[{"p", "=", 
           RowBox[{"r", "+", 
            RowBox[{"I", " ", "c"}]}]}], ";", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "@", "x"}], "\[LessEqual]", 
              SqrtBox["2"]}], "&&", 
             RowBox[{"i", "<", 
              SuperscriptBox["9", "3"]}]}], ",", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               SuperscriptBox["x", "2"], "+", "p"}]}], ";", 
             RowBox[{"++", "i"}]}]}], "]"}], ";", 
          RowBox[{"Tanh", "[", 
           RadicalBox[
            RowBox[{"i", "/", 
             SuperscriptBox["9", "3"]}], "7"], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", ".01"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"-", "2"}], ",", "1", ",", ".01"}], "}"}]}], "]"}]}], 
      "]"}]}], "]"}], "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.5277665338507147`*^9, 3.527766537728526*^9}, {
  3.527766788421228*^9, 3.527766792598621*^9}, {3.527766830190241*^9, 
  3.5277668327175903`*^9}, {3.5277670904198914`*^9, 3.527767100503194*^9}, {
  3.527788771409398*^9, 3.527788771968841*^9}, {3.5277888862011337`*^9, 
  3.527788888399012*^9}, {3.5281698216338997`*^9, 3.5281698979884987`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["32 Shooter", "Section",
 CellChangeTimes->{{3.527788430684629*^9, 3.52778843251562*^9}, {
  3.529085485284712*^9, 3.529085485484735*^9}}],

Cell[CellGroupData[{

Cell["Stephan Leibbrandt", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195577274365*^9, 3.528195580879058*^9}, {
   3.528197926235167*^9, 3.528197927807521*^9}, {3.5290855013021793`*^9, 
   3.529085504268931*^9}}],

Cell["Click to shoot before a disk is falling through.", "Text",
 CellChangeTimes->{{3.527789594999382*^9, 3.527789626118891*^9}}],

Cell[BoxData[{
 RowBox[{"X", "=", 
  RowBox[{"Y", "=", 
   RowBox[{"x", "=", 
    RowBox[{"y", "=", "0"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ClickPane", "[", 
  RowBox[{
   RowBox[{"Dynamic", "@", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"++", "y"}]}], "}"}], "]"}], ",", 
        RowBox[{"Disk", "@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", ".", "#"}], ">", "1"}], "&"}], "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "-", 
             RowBox[{"{", 
              RowBox[{"X", ",", "Y"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"X", ",", 
             RowBox[{"Y", "-=", ".1"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"X", ",", "Y"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"RandomReal", "[", "9", "]"}], ",", "9"}], "}"}]}]}], 
          "]"}]}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "9"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "=", "#"}], ")"}], "&"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.5277001400536623`*^9, {3.527700228421332*^9, 3.527700244441951*^9}, {
   3.527700312685048*^9, 3.527700318785829*^9}, {3.527700382471781*^9, 
   3.527700402428782*^9}, {3.5277114571836853`*^9, 3.527711508876392*^9}, {
   3.527711547620257*^9, 3.527711595134589*^9}, {3.5277116516499777`*^9, 
   3.527711672774076*^9}, {3.527711721578535*^9, 3.527711721951894*^9}, {
   3.527711770465617*^9, 3.527711781568983*^9}, {3.527711816065227*^9, 
   3.5277118169206553`*^9}, {3.5277118470717373`*^9, 
   3.5277118641060963`*^9}, {3.527711894501678*^9, 3.527711906034737*^9}, {
   3.527711975714443*^9, 3.527711984661222*^9}, {3.527712106152649*^9, 
   3.5277122099914837`*^9}, {3.527712344244426*^9, 3.5277123506684437`*^9}, {
   3.527712409638012*^9, 3.5277124225501013`*^9}, 3.527712587098352*^9, {
   3.5277126970081367`*^9, 3.527712697344733*^9}, {3.5277127581768503`*^9, 
   3.527712758410159*^9}, {3.527713079819906*^9, 3.527713098785624*^9}, {
   3.527713140840665*^9, 3.527713278726268*^9}, {3.527725278262226*^9, 
   3.5277253180432367`*^9}, {3.527725386251541*^9, 3.52772547683036*^9}, {
   3.527725585696788*^9, 3.527725604580271*^9}, {3.527725793986567*^9, 
   3.527725853278492*^9}, {3.527725944126584*^9, 3.527726027670349*^9}, {
   3.527726068697628*^9, 3.527726069706841*^9}, {3.5277261329649887`*^9, 
   3.527726140994789*^9}, {3.5277261916107807`*^9, 3.5277262758318577`*^9}, {
   3.527726482510923*^9, 3.5277266464879827`*^9}, {3.527726729675742*^9, 
   3.527726761196855*^9}, {3.527726801220729*^9, 3.527726814288368*^9}, {
   3.527726934575642*^9, 3.527727066964219*^9}, {3.527727603954266*^9, 
   3.5277276142425623`*^9}, {3.527727658678358*^9, 3.527727667940436*^9}, {
   3.527727744273026*^9, 3.527727756854272*^9}, {3.527727859315102*^9, 
   3.527727860021922*^9}, {3.527727936737687*^9, 3.5277279368770323`*^9}, 
   3.5277286257154512`*^9, {3.527728682639824*^9, 3.527728779564157*^9}, {
   3.527728870979032*^9, 3.527728910718401*^9}, {3.527729061741599*^9, 
   3.5277290675050907`*^9}, 3.527729241174911*^9, 3.527729453538118*^9, {
   3.527729744972185*^9, 3.527729747192593*^9}, {3.527756395573598*^9, 
   3.527756544933354*^9}, 3.527756614771749*^9, {3.527756659995064*^9, 
   3.527756660325795*^9}, {3.5277567157624474`*^9, 3.527756741877932*^9}, {
   3.527756779257296*^9, 3.527756877240704*^9}, {3.5277570760316267`*^9, 
   3.527757082409712*^9}, 3.527757150020287*^9, {3.527757218665224*^9, 
   3.5277573263445463`*^9}, {3.527757766663086*^9, 3.527757834113276*^9}, {
   3.5277580876880903`*^9, 3.527758137577711*^9}, {3.527768397897011*^9, 
   3.527768401163722*^9}, 3.5277684321131563`*^9, {3.5277688070492077`*^9, 
   3.527768824686552*^9}, 3.527768917444817*^9, {3.527768957642076*^9, 
   3.5277689634848843`*^9}, {3.5277696026426764`*^9, 3.527769685124217*^9}, {
   3.5277697457733593`*^9, 3.527769805965507*^9}, {3.527769844215973*^9, 
   3.5277698717732286`*^9}, {3.527769959196113*^9, 3.5277699695923243`*^9}, {
   3.527770029077256*^9, 3.5277700337837667`*^9}, {3.5277700965098743`*^9, 
   3.5277700970199614`*^9}, 3.5277722025619307`*^9, {3.527772269438043*^9, 
   3.5277723304952793`*^9}, {3.52777633050275*^9, 3.5277763398602324`*^9}, {
   3.527776465168852*^9, 3.5277764784357*^9}, {3.52777654101884*^9, 
   3.527776565647101*^9}, {3.5277767326093483`*^9, 3.52777675199481*^9}, {
   3.527776782027964*^9, 3.527776850957119*^9}, 3.527776914990282*^9, {
   3.527777005705661*^9, 3.527777010698414*^9}, 3.527777045518762*^9, {
   3.5277770925115013`*^9, 3.527777096868329*^9}, {3.527777684476077*^9, 
   3.5277777136768*^9}, 3.527787415074761*^9, {3.527787447417302*^9, 
   3.5277874517737637`*^9}, {3.5277876237536707`*^9, 
   3.5277877143779793`*^9}, {3.527787823866172*^9, 3.527787824423326*^9}, 
   3.527787901406032*^9, {3.5277879486885757`*^9, 3.5277879519155693`*^9}, 
   3.5277883686891623`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["33 Slow Motion", "Section",
 CellChangeTimes->{{3.527905206523423*^9, 3.527905212344522*^9}, {
  3.527906117696163*^9, 3.527906120641733*^9}, {3.5279348047003307`*^9, 
  3.527934806973774*^9}, {3.528111897515571*^9, 3.528111908152649*^9}, {
  3.5281634247404003`*^9, 3.528163428071007*^9}, {3.529085492228066*^9, 
  3.5290854933959503`*^9}}],

Cell[CellGroupData[{

Cell["Stephan Leibbrandt", "Subsubsection",
 CellChangeTimes->{{3.527946975853498*^9, 3.527946986986004*^9}, 
   3.52803237384715*^9, {3.528190855892705*^9, 3.528190857689857*^9}, 
   3.528190927091628*^9, {3.528195577274365*^9, 3.528195580879058*^9}, {
   3.528197926235167*^9, 3.528197927807521*^9}, {3.5290855013021793`*^9, 
   3.529085504268931*^9}}],

Cell["\<\
The image shows \[OpenCurlyDoubleQuote]only\[CloseCurlyDoubleQuote] parts \
that are moving. Therefore, background is \[OpenCurlyDoubleQuote]not\
\[CloseCurlyDoubleQuote] shown. At least my iSight camera needed a certain \
light level. Move from left to right to observe the effect.\
\>", "Text",
 CellChangeTimes->{{3.527934769262765*^9, 3.527934817049739*^9}, {
  3.52816343717826*^9, 3.528163439471705*^9}, {3.5281639155052567`*^9, 
  3.528163967396824*^9}, {3.528164029195436*^9, 3.52816405231595*^9}}],

Cell["\<\
On my computer it took up to a minute before the image appeared. Then, speed \
was reasonable.  Calling CurrentImage[] before helps to reduce te startup \
time.\
\>", "Text",
 CellChangeTimes->{{3.5279347005240803`*^9, 3.5279347617980633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"#", "[", "]"}], ",", 
        RowBox[{"{", "9", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Fold", "[", 
         RowBox[{"ImageDifference", ",", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"Rest", "@", "#"}]}], "]"}], "&"}], "[", 
       RowBox[{"ImageSubtract", "@@@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Rest", "@", "p"}], ",", 
             RowBox[{"{", 
              RowBox[{"#", "[", "]"}], "}"}]}], "]"}]}], ",", "2", ",", "1"}],
          "]"}]}], "]"}], "]"}]}], ")"}], "&"}], "[", "CurrentImage", 
  "]"}]], "Input",
 CellChangeTimes->{{3.528163777981234*^9, 3.528163778117465*^9}, {
  3.528163834369411*^9, 3.528163837969961*^9}, {3.528165436169462*^9, 
  3.528165437048617*^9}, {3.528165486821702*^9, 3.528165486953611*^9}, {
  3.528165609541854*^9, 3.528165610283203*^9}, {3.528165762424629*^9, 
  3.5281657627947083`*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1040, 768},
WindowMargins->{{Automatic, 113}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb",
PrivateNotebookOptions -> {"NotebookAuthor" -> ""}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[575, 22, 228, 7, 148, "Title"],
Cell[806, 31, 360, 6, 49, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1191, 41, 333, 4, 64, "Section"],
Cell[CellGroupData[{
Cell[1549, 49, 103, 1, 24, "Subsubsection"],
Cell[1655, 52, 160, 4, 26, "Text"],
Cell[1818, 58, 1397, 44, 133, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3264, 108, 384, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[3673, 117, 149, 2, 24, "Subsubsection"],
Cell[3825, 121, 393, 7, 41, "Text"],
Cell[4221, 130, 184, 4, 26, "Text"],
Cell[4408, 136, 304, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[4737, 146, 329, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[5091, 159, 220, 2, 20, "Print"],
Cell[5314, 163, 18345, 320, 257, "Print"],
Cell[23662, 485, 272, 6, 20, "Print"],
Cell[23937, 493, 28765, 491, 258, "Print"],
Cell[52705, 986, 1112, 21, 36, "Print"],
Cell[53820, 1009, 26742, 458, 254, "Print"],
Cell[80565, 1469, 26416, 453, 258, "Print"],
Cell[106984, 1924, 24344, 403, 244, "Print"],
Cell[131331, 2329, 24409, 405, 242, "Print"],
Cell[155743, 2736, 17450, 306, 263, "Print"],
Cell[173196, 3044, 9700, 183, 273, "Print"],
Cell[182899, 3229, 3225, 63, 275, "Print"],
Cell[186127, 3294, 4837, 92, 275, "Print"],
Cell[190967, 3388, 329, 7, 20, "Print"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[191369, 3403, 371, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[191765, 3412, 149, 2, 24, "Subsubsection"],
Cell[191917, 3416, 517, 8, 41, "Text"],
Cell[192437, 3426, 1306, 41, 58, "Input"],
Cell[193746, 3469, 164, 2, 26, "Text"],
Cell[193913, 3473, 140, 3, 27, "Input"],
Cell[194056, 3478, 155, 2, 26, "Text"],
Cell[CellGroupData[{
Cell[194236, 3484, 176, 3, 43, "Input"],
Cell[194415, 3489, 182, 2, 27, "Output"]
}, Closed]],
Cell[194612, 3494, 522, 11, 26, "Text"],
Cell[195137, 3507, 293, 6, 43, "Input"],
Cell[195433, 3515, 335, 4, 26, "Text"],
Cell[195771, 3521, 376, 9, 27, "Input"],
Cell[196150, 3532, 213, 6, 27, "Input"],
Cell[196366, 3540, 177, 3, 27, "Input"],
Cell[196546, 3545, 235, 5, 27, "Input"],
Cell[196784, 3552, 735, 9, 26, "Text"],
Cell[197522, 3563, 835, 21, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[198406, 3590, 334, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[198765, 3598, 178, 2, 24, "Subsubsection"],
Cell[198946, 3602, 19516, 329, 136, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[218511, 3937, 399, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[218935, 3946, 148, 2, 24, "Subsubsection"],
Cell[219086, 3950, 961, 17, 71, "Text"],
Cell[220050, 3969, 10141, 140, 2053, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[230240, 4115, 276, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[230541, 4123, 157, 2, 24, "Subsubsection"],
Cell[230701, 4127, 947, 27, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[231697, 4160, 284, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[232006, 4168, 147, 2, 24, "Subsubsection"],
Cell[232156, 4172, 403, 7, 41, "Text"],
Cell[232562, 4181, 1657, 33, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[234268, 4220, 281, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[234574, 4228, 149, 2, 24, "Subsubsection"],
Cell[234726, 4232, 223, 5, 26, "Text"],
Cell[234952, 4239, 1258, 30, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[236259, 4275, 306, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[236590, 4283, 179, 2, 24, "Subsubsection"],
Cell[236772, 4287, 1329, 39, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[238150, 4332, 361, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[238536, 4341, 177, 2, 24, "Subsubsection"],
Cell[238716, 4345, 157, 4, 26, "Text"],
Cell[238876, 4351, 2366, 32, 251, "Text"],
Cell[241245, 4385, 800, 22, 49, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[242094, 4413, 328, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[242447, 4421, 180, 2, 24, "Subsubsection"],
Cell[242630, 4425, 1249, 32, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[243928, 4463, 320, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[244273, 4471, 154, 2, 24, "Subsubsection"],
Cell[244430, 4475, 1352, 35, 49, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[245831, 4516, 354, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[246210, 4525, 172, 2, 24, "Subsubsection"],
Cell[246385, 4529, 155, 3, 26, "Text"],
Cell[246543, 4534, 1042, 31, 75, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[247634, 4571, 437, 6, 50, "Section"],
Cell[CellGroupData[{
Cell[248096, 4581, 172, 2, 24, "Subsubsection"],
Cell[248271, 4585, 685, 11, 41, "Text"],
Cell[248959, 4598, 671, 15, 27, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[249679, 4619, 516, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[250220, 4630, 222, 3, 24, "Subsubsection"],
Cell[250445, 4635, 851, 23, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[251345, 4664, 518, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[251888, 4675, 222, 3, 24, "Subsubsection"],
Cell[252113, 4680, 1190, 27, 49, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[253352, 4713, 521, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[253898, 4724, 220, 3, 24, "Subsubsection"],
Cell[254121, 4729, 766, 20, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[254936, 4755, 529, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[255490, 4766, 223, 3, 24, "Subsubsection"],
Cell[255716, 4771, 492, 8, 41, "Text"],
Cell[256211, 4781, 2735, 55, 88, "Input"],
Cell[258949, 4838, 448, 8, 26, "Text"],
Cell[259400, 4848, 181, 2, 26, "Text"],
Cell[259584, 4852, 177, 3, 27, "Input"],
Cell[259764, 4857, 560, 9, 26, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[260373, 4872, 579, 8, 50, "Section"],
Cell[CellGroupData[{
Cell[260977, 4884, 319, 4, 24, "Subsubsection"],
Cell[261299, 4890, 1050, 25, 221, "Text"],
Cell[262352, 4917, 264, 6, 27, "Input"],
Cell[262619, 4925, 1419, 45, 174, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[264087, 4976, 530, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[264642, 4987, 222, 3, 24, "Subsubsection"],
Cell[264867, 4992, 417, 7, 26, "Text"],
Cell[265287, 5001, 902, 26, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[266238, 5033, 538, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[266801, 5044, 243, 3, 24, "Subsubsection"],
Cell[267047, 5049, 320, 6, 26, "Text"],
Cell[CellGroupData[{
Cell[267392, 5059, 867, 20, 58, "Input"],
Cell[268262, 5081, 75, 1, 27, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[268398, 5089, 575, 9, 50, "Section"],
Cell[CellGroupData[{
Cell[268998, 5102, 250, 3, 24, "Subsubsection"],
Cell[269251, 5107, 712, 13, 56, "Text"],
Cell[269966, 5122, 1746, 45, 88, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[271761, 5173, 538, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[272324, 5184, 247, 3, 24, "Subsubsection"],
Cell[272574, 5189, 554, 9, 41, "Text"],
Cell[CellGroupData[{
Cell[273153, 5202, 543, 8, 20, "ItemNumbered"],
Cell[273699, 5212, 665, 12, 33, "ItemNumbered"],
Cell[274367, 5226, 369, 7, 20, "ItemNumbered"],
Cell[274739, 5235, 249, 5, 20, "ItemNumbered"]
}, Closed]],
Cell[275003, 5243, 600, 10, 41, "Text"],
Cell[275606, 5255, 297, 7, 28, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[275940, 5267, 162, 2, 24, "Subsubsection"],
Cell[276105, 5271, 2101, 46, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[278243, 5322, 187, 2, 24, "Subsubsection"],
Cell[278433, 5326, 2002, 43, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[280484, 5375, 525, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[281034, 5386, 220, 3, 24, "Subsubsection"],
Cell[281257, 5391, 118, 2, 26, "Text"],
Cell[281378, 5395, 1998, 48, 166, "Text"],
Cell[CellGroupData[{
Cell[283401, 5447, 1248, 35, 43, "Input"],
Cell[CellGroupData[{
Cell[284674, 5486, 93, 1, 20, "Print"],
Cell[284770, 5489, 97, 1, 20, "Print"],
Cell[284870, 5492, 85, 1, 20, "Print"],
Cell[284958, 5495, 91, 1, 20, "Print"],
Cell[285052, 5498, 91, 1, 20, "Print"],
Cell[285146, 5501, 89, 1, 20, "Print"],
Cell[285238, 5504, 87, 1, 20, "Print"],
Cell[285328, 5507, 87, 1, 20, "Print"],
Cell[285418, 5510, 93, 1, 20, "Print"],
Cell[285514, 5513, 91, 1, 20, "Print"],
Cell[285608, 5516, 88, 1, 20, "Print"],
Cell[285699, 5519, 87, 1, 20, "Print"],
Cell[285789, 5522, 89, 1, 20, "Print"],
Cell[285881, 5525, 89, 1, 20, "Print"]
}, Closed]],
Cell[285985, 5529, 79, 1, 27, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[286125, 5537, 555, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[286705, 5548, 220, 3, 24, "Subsubsection"],
Cell[286928, 5553, 307, 7, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[287284, 5566, 538, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[287847, 5577, 246, 3, 24, "Subsubsection"],
Cell[288096, 5582, 119, 2, 26, "Text"],
Cell[288218, 5586, 1127, 19, 146, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[289382, 5610, 92, 1, 34, "Subsection"],
Cell[289477, 5613, 816, 24, 27, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[290342, 5643, 526, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[290893, 5654, 225, 3, 24, "Subsubsection"],
Cell[291121, 5659, 316, 6, 71, "Text"],
Cell[291440, 5667, 913, 26, 27, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[292402, 5699, 619, 12, 50, "Section"],
Cell[CellGroupData[{
Cell[293046, 5715, 225, 3, 24, "Subsubsection"],
Cell[293274, 5720, 415, 7, 41, "Text"],
Cell[293692, 5729, 226, 3, 26, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[293967, 5738, 525, 7, 50, "Section"],
Cell[CellGroupData[{
Cell[294517, 5749, 248, 3, 24, "Subsubsection"],
Cell[294768, 5754, 226, 4, 26, "Text"],
Cell[294997, 5760, 1371, 38, 43, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[296417, 5804, 578, 8, 50, "Section"],
Cell[CellGroupData[{
Cell[297020, 5816, 295, 4, 24, "Subsubsection"],
Cell[297318, 5822, 1256, 37, 53, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[298623, 5865, 143, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[298791, 5871, 354, 5, 24, "Subsubsection"],
Cell[299148, 5878, 1788, 47, 83, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[300985, 5931, 143, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[301153, 5937, 354, 5, 24, "Subsubsection"],
Cell[301510, 5944, 130, 1, 26, "Text"],
Cell[301643, 5947, 5257, 98, 58, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[306949, 6051, 347, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[307321, 6060, 354, 5, 24, "Subsubsection"],
Cell[307678, 6067, 516, 8, 26, "Text"],
Cell[308197, 6077, 254, 5, 26, "Text"],
Cell[308454, 6084, 1263, 33, 58, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

